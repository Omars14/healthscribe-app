{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,6JAAA,CAAA,aAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,6JAAA,CAAA,aAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,6JAAA,CAAA,aAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,6JAAA,CAAA,aAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,6JAAA,CAAA,aAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,6JAAA,CAAA,aAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,6JAAA,CAAA,aAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport type InputProps = React.InputHTMLAttributes<HTMLInputElement>\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAIA,MAAM,sBAAQ,6JAAA,CAAA,aAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8VACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,6JAAA,CAAA,aAAgB,MAI5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/lib/direct-upload-service.ts"],"sourcesContent":["import { supabase } from './supabase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport interface DirectUploadOptions {\r\n  file: File\r\n  userId?: string\r\n  bucketName?: string\r\n}\r\n\r\nexport interface DirectUploadResult {\r\n  publicUrl: string\r\n  path: string\r\n  error?: string\r\n}\r\n\r\n/**\r\n * Upload file directly to Supabase Storage from the client\r\n * This bypasses Vercel's 4.5MB limit\r\n */\r\nexport async function uploadDirectToStorage({\r\n  file,\r\n  userId,\r\n  bucketName = 'audio-files'\r\n}: DirectUploadOptions): Promise<DirectUploadResult> {\r\n  try {\r\n    // Generate unique file name\r\n    const timestamp = Date.now()\r\n    const fileExt = file.name.split('.').pop() || 'mp3'\r\n    const fileName = `${timestamp}-${uuidv4()}.${fileExt}`\r\n    const filePath = userId ? `${userId}/${fileName}` : `anonymous/${fileName}`\r\n    \r\n    console.log('📤 Uploading directly to Supabase Storage:', filePath)\r\n    \r\n    // Upload directly to Supabase Storage from client\r\n    const { data, error } = await supabase.storage\r\n      .from(bucketName)\r\n      .upload(filePath, file, {\r\n        cacheControl: '3600',\r\n        upsert: false\r\n      })\r\n    \r\n    if (error) {\r\n      console.error('❌ Storage upload error:', error)\r\n      \r\n      // Try to create bucket if it doesn't exist\r\n      if (error.message?.includes('bucket') || error.message?.includes('not found')) {\r\n        console.log('🪣 Bucket might not exist, please create it in Supabase dashboard')\r\n        throw new Error('Storage bucket not configured. Please contact support.')\r\n      }\r\n      \r\n      throw error\r\n    }\r\n    \r\n    // Get public URL for the uploaded file\r\n    const { data: { publicUrl } } = supabase.storage\r\n      .from(bucketName)\r\n      .getPublicUrl(filePath)\r\n    \r\n    console.log('✅ File uploaded successfully:', publicUrl)\r\n    \r\n    return {\r\n      publicUrl,\r\n      path: filePath\r\n    }\r\n  } catch (error) {\r\n    console.error('❌ Failed to upload to storage:', error)\r\n    return {\r\n      publicUrl: '',\r\n      path: '',\r\n      error: error instanceof Error ? error.message : 'Upload failed'\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Create a signed URL for private bucket access\r\n */\r\nexport async function createSignedUrl(\r\n  bucketName: string,\r\n  path: string,\r\n  expiresIn: number = 3600\r\n): Promise<string | null> {\r\n  try {\r\n    const { data, error } = await supabase.storage\r\n      .from(bucketName)\r\n      .createSignedUrl(path, expiresIn)\r\n    \r\n    if (error) throw error\r\n    \r\n    return data.signedUrl\r\n  } catch (error) {\r\n    console.error('Failed to create signed URL:', error)\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Delete a file from storage\r\n */\r\nexport async function deleteFromStorage(\r\n  bucketName: string,\r\n  path: string\r\n): Promise<boolean> {\r\n  try {\r\n    const { error } = await supabase.storage\r\n      .from(bucketName)\r\n      .remove([path])\r\n    \r\n    if (error) throw error\r\n    \r\n    return true\r\n  } catch (error) {\r\n    console.error('Failed to delete from storage:', error)\r\n    return false\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAkBO,eAAe,sBAAsB,KAItB;QAJsB,EAC1C,IAAI,EACJ,MAAM,EACN,aAAa,aAAa,EACN,GAJsB;IAK1C,IAAI;QACF,4BAA4B;QAC5B,MAAM,YAAY,KAAK,GAAG;QAC1B,MAAM,UAAU,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM;QAC9C,MAAM,WAAW,AAAC,GAAe,OAAb,WAAU,KAAe,OAAZ,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD,KAAI,KAAW,OAAR;QAC7C,MAAM,WAAW,SAAS,AAAC,GAAY,OAAV,QAAO,KAAY,OAAT,YAAa,AAAC,aAAqB,OAAT;QAEjE,QAAQ,GAAG,CAAC,8CAA8C;QAE1D,kDAAkD;QAClD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAAC,OAAO,CAC3C,IAAI,CAAC,YACL,MAAM,CAAC,UAAU,MAAM;YACtB,cAAc;YACd,QAAQ;QACV;QAEF,IAAI,OAAO;gBAIL,gBAAqC;YAHzC,QAAQ,KAAK,CAAC,2BAA2B;YAEzC,2CAA2C;YAC3C,IAAI,EAAA,iBAAA,MAAM,OAAO,cAAb,qCAAA,eAAe,QAAQ,CAAC,gBAAa,kBAAA,MAAM,OAAO,cAAb,sCAAA,gBAAe,QAAQ,CAAC,eAAc;gBAC7E,QAAQ,GAAG,CAAC;gBACZ,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM;QACR;QAEA,uCAAuC;QACvC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,GAAG,yHAAA,CAAA,WAAQ,CAAC,OAAO,CAC7C,IAAI,CAAC,YACL,YAAY,CAAC;QAEhB,QAAQ,GAAG,CAAC,iCAAiC;QAE7C,OAAO;YACL;YACA,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;YACL,WAAW;YACX,MAAM;YACN,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF;AAKO,eAAe,gBACpB,UAAkB,EAClB,IAAY;QACZ,YAAA,iEAAoB;IAEpB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAAC,OAAO,CAC3C,IAAI,CAAC,YACL,eAAe,CAAC,MAAM;QAEzB,IAAI,OAAO,MAAM;QAEjB,OAAO,KAAK,SAAS;IACvB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;IACT;AACF;AAKO,eAAe,kBACpB,UAAkB,EAClB,IAAY;IAEZ,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAAC,OAAO,CACrC,IAAI,CAAC,YACL,MAAM,CAAC;YAAC;SAAK;QAEhB,IAAI,OAAO,MAAM;QAEjB,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/lib/transcription-service.ts"],"sourcesContent":["import { supabase } from './supabase'\nimport { uploadDirectToStorage } from './direct-upload-service'\n\n// Use optimized endpoint by default\nconst USE_OPTIMIZED_API = true\n\nexport interface TranscriptionRequest {\n  audioFile: File\n  doctorName: string\n  patientName: string\n  documentType: string\n}\n\nexport interface TranscriptionResponse {\n  success: boolean\n  transcriptionId?: string\n  status?: string\n  transcription?: string\n  message?: string\n  error?: string\n}\n\nexport interface TranscriptionStatus {\n  id: string\n  status: 'pending' | 'in_progress' | 'completed' | 'failed'\n  transcription_text?: string\n  audio_url?: string\n  error?: string\n}\n\n/**\n * Submit audio file for transcription via n8n webhook\n * Now uploads directly to Supabase Storage to bypass Vercel's 4.5MB limit\n */\nexport async function submitTranscription(\n  request: TranscriptionRequest\n): Promise<TranscriptionResponse> {\n  try {\n    // Get the current session for user ID\n    const { data: { session } } = await supabase.auth.getSession()\n    const userId = session?.user?.id\n    \n    // Step 1: Upload file directly to Supabase Storage from client\n    // This bypasses Vercel's 4.5MB limit entirely\n    console.log('Uploading file directly to Supabase Storage...')\n    const uploadResult = await uploadDirectToStorage({\n      file: request.audioFile,\n      userId\n    })\n    \n    if (uploadResult.error) {\n      throw new Error(uploadResult.error)\n    }\n    \n    // Step 2: Send only metadata and storage URL to our API\n    // This payload is tiny (just a few KB)\n    const payload = {\n      audioUrl: uploadResult.publicUrl,\n      audioPath: uploadResult.path,\n      fileName: request.audioFile.name,\n      fileSize: request.audioFile.size,\n      fileType: request.audioFile.type,\n      doctorName: request.doctorName,\n      patientName: request.patientName,\n      documentType: request.documentType\n    }\n    \n    const endpoint = USE_OPTIMIZED_API ? '/api/transcribe-optimized' : '/api/transcribe'\n    const headers: HeadersInit = {\n      'Content-Type': 'application/json'\n    }\n    \n    if (session?.access_token) {\n      headers['Authorization'] = `Bearer ${session.access_token}`\n    }\n    \n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(payload),\n    })\n\n    const data = await response.json()\n\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to submit transcription')\n    }\n\n    return data\n  } catch (error) {\n    console.error('Transcription submission error:', error)\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Failed to submit transcription',\n      message: 'Please try again or contact support if the issue persists'\n    }\n  }\n}\n\n/**\n * Check the status of a transcription\n */\nexport async function checkTranscriptionStatus(\n  transcriptionId: string\n): Promise<TranscriptionStatus | null> {\n  try {\n    const { data, error } = await supabase\n      .from('transcriptions')\n      .select('id, status, transcription_text, audio_url, error')\n      .eq('id', transcriptionId)\n      .single()\n\n    if (error) {\n      console.error('Status check error:', error)\n      return null\n    }\n\n    return data as TranscriptionStatus\n  } catch (error) {\n    console.error('Failed to check transcription status:', error)\n    return null\n  }\n}\n\n/**\n * Poll for transcription completion\n */\nexport async function pollTranscriptionStatus(\n  transcriptionId: string,\n  onUpdate?: (status: TranscriptionStatus) => void,\n  maxAttempts: number = 60,\n  intervalMs: number = 5000\n): Promise<TranscriptionStatus | null> {\n  let attempts = 0\n\n  return new Promise((resolve) => {\n    const interval = setInterval(async () => {\n      attempts++\n\n      const status = await checkTranscriptionStatus(transcriptionId)\n\n      if (status) {\n        if (onUpdate) {\n          onUpdate(status)\n        }\n\n        if (status.status === 'completed' || status.status === 'failed') {\n          clearInterval(interval)\n          resolve(status)\n          return\n        }\n      }\n\n      if (attempts >= maxAttempts) {\n        clearInterval(interval)\n        resolve(null)\n      }\n    }, intervalMs)\n  })\n}\n\n/**\n * Format file size for display\n */\nexport function formatFileSize(bytes: number | null | undefined): string {\n  if (!bytes || bytes === 0) return '-'\n  \n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  \n  return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i]\n}\n\n/**\n * Validate audio file\n */\nexport function validateAudioFile(file: File): { valid: boolean; error?: string } {\n  const MAX_SIZE = 100 * 1024 * 1024 // 100MB\n  const ALLOWED_TYPES = [\n    'audio/mpeg',\n    'audio/wav',\n    'audio/webm',\n    'audio/ogg',\n    'audio/mp4',\n    'audio/m4a',\n    'audio/x-m4a',\n    'audio/mp3',\n    'audio/x-wav',\n    'audio/wave'\n  ]\n\n  if (file.size > MAX_SIZE) {\n    return {\n      valid: false,\n      error: `File size exceeds maximum of ${formatFileSize(MAX_SIZE)}`\n    }\n  }\n\n  if (!ALLOWED_TYPES.includes(file.type) && !file.name.match(/\\.(mp3|wav|m4a|ogg|webm|mp4)$/i)) {\n    return {\n      valid: false,\n      error: 'Invalid audio format. Please upload MP3, WAV, M4A, OGG, or WebM files'\n    }\n  }\n\n  return { valid: true }\n}\n\n/**\n * Extract audio duration (requires browser audio API)\n */\nexport async function getAudioDuration(file: File): Promise<number> {\n  return new Promise((resolve, reject) => {\n    const audio = new Audio()\n    const objectUrl = URL.createObjectURL(file)\n\n    audio.addEventListener('loadedmetadata', () => {\n      URL.revokeObjectURL(objectUrl)\n      resolve(audio.duration)\n    })\n\n    audio.addEventListener('error', () => {\n      URL.revokeObjectURL(objectUrl)\n      reject(new Error('Failed to load audio file'))\n    })\n\n    audio.src = objectUrl\n  })\n}\n\n/**\n * Format duration for display\n */\nexport function formatDuration(seconds: number): string {\n  const hours = Math.floor(seconds / 3600)\n  const minutes = Math.floor((seconds % 3600) / 60)\n  const secs = Math.floor(seconds % 60)\n\n  if (hours > 0) {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`\n  }\n  return `${minutes}:${secs.toString().padStart(2, '0')}`\n}\n\n/**\n * Subscribe to real-time transcription status updates via SSE\n */\nexport async function subscribeToTranscriptionStatus(\n  transcriptionId: string,\n  onUpdate: (event: TranscriptionStatus) => void,\n  onError?: (error: Error | Event) => void,\n  onComplete?: () => void\n): Promise<() => void> {\n  try {\n    const { data: { session } } = await supabase.auth.getSession()\n\n    if (!session?.access_token) {\n      const error = new Error('No authentication token available')\n      if (onError) onError(error)\n      return () => {} // Return empty cleanup function\n    }\n\n    const token = encodeURIComponent(session.access_token)\n    const eventSource = new EventSource(`/api/transcription-status?id=${transcriptionId}&token=${token}`)\n  \n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data)\n\n        if (data.type === 'status') {\n          onUpdate(data.data)\n        } else if (data.type === 'complete') {\n          if (onComplete) onComplete()\n          eventSource.close()\n        } else if (data.type === 'error' || data.type === 'timeout') {\n          if (onError) onError(data)\n          eventSource.close()\n        }\n      } catch (error) {\n        console.error('SSE parse error:', error)\n        if (onError) onError(error instanceof Error ? error : new Error(String(error)))\n      }\n    }\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error)\n      if (onError) onError(error)\n      eventSource.close()\n    }\n\n    // Return cleanup function\n    return () => {\n      eventSource.close()\n    }\n  } catch (error) {\n    console.error('Failed to create EventSource connection:', error)\n\n    // Fallback to polling if EventSource fails\n    console.log('🔄 Falling back to polling for transcription status updates')\n    return pollTranscriptionStatus(transcriptionId, onUpdate, 60, 2000) as any\n  }\n}\n\n/**\n * Submit transcription with real-time status updates\n */\nexport async function submitTranscriptionWithUpdates(\n  request: TranscriptionRequest,\n  onStatusUpdate?: (status: TranscriptionStatus) => void\n): Promise<TranscriptionResponse> {\n  try {\n    // Submit the transcription\n    const response = await submitTranscription(request)\n\n    if (response.success && response.transcriptionId) {\n      // Subscribe to status updates\n      const unsubscribe = await subscribeToTranscriptionStatus(\n        response.transcriptionId,\n        (status) => {\n          if (onStatusUpdate) {\n            onStatusUpdate(status)\n          }\n        },\n        (error) => {\n          console.error('Status update error:', error)\n        },\n        () => {\n          console.log('Transcription complete')\n        }\n      )\n\n      // Store unsubscribe function for later cleanup if needed\n      const responseWithUnsubscribe = response as TranscriptionResponse & { unsubscribe?: () => void }\n      responseWithUnsubscribe.unsubscribe = unsubscribe\n    }\n\n    return response\n  } catch (error) {\n    console.error('Submit with updates error:', error)\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Failed to submit transcription',\n      message: 'Please try again'\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 635, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/app/dashboard/transcriptions/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { useAuth } from '@/contexts/AuthContext'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Label } from '@/components/ui/label'\r\nimport { \r\n  FileAudio, \r\n  Search, \r\n  Filter,\r\n  Download,\r\n  Calendar,\r\n  Clock,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  FileText,\r\n  User,\r\n  Send,\r\n  Eye\r\n} from 'lucide-react'\r\nimport { supabase } from '@/lib/supabase'\r\nimport { formatFileSize, formatDuration } from '@/lib/transcription-service'\r\n\r\ninterface Transcription {\r\n  id: string\r\n  file_name: string\r\n  doctor_name: string\r\n  patient_name: string\r\n  document_type: string\r\n  transcription_text: string\r\n  audio_url: string\r\n  created_at: string\r\n  status?: 'pending' | 'in_progress' | 'completed' | 'failed' // Make status optional\r\n  file_size?: number\r\n  duration?: number\r\n  review_status?: 'pending' | 'in_review' | 'approved' | 'rejected' | 'completed' | null\r\n  review_id?: string | null\r\n  is_final?: boolean\r\n}\r\n\r\nexport default function TranscriptionsPage() {\r\n  const { user } = useAuth()\r\n  const [transcriptions, setTranscriptions] = useState<Transcription[]>([])\r\n  const [filteredTranscriptions, setFilteredTranscriptions] = useState<Transcription[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [statusFilter, setStatusFilter] = useState<string>('all')\r\n  const [dateFilter, setDateFilter] = useState<string>('all')\r\n  const [doctorFilter, setDoctorFilter] = useState<string>('all')\r\n  const [typeFilter, setTypeFilter] = useState<string>('all')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [showFilters, setShowFilters] = useState(false)\r\n  const itemsPerPage = 10\r\n\r\n  useEffect(() => {\r\n    fetchTranscriptions()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    applyFilters()\r\n  }, [transcriptions, searchTerm, statusFilter, dateFilter, doctorFilter, typeFilter])\r\n\r\n  const fetchTranscriptions = async () => {\r\n    try {\r\n      console.log('Fetching transcriptions from Supabase...')\r\n      console.log('Current user:', user?.email, 'User ID:', user?.id)\r\n      \r\n      if (!user?.id) {\r\n        console.log('No authenticated user found')\r\n        setTranscriptions([])\r\n        setLoading(false)\r\n        return\r\n      }\r\n      \r\n      // Get user-specific transcriptions\r\n      const { data, error } = await supabase\r\n        .from('transcriptions')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .order('created_at', { ascending: false })\r\n\r\n      console.log('Supabase response:', { \r\n        data: data, \r\n        dataLength: data?.length,\r\n        error: error,\r\n        errorMessage: error?.message \r\n      })\r\n      \r\n      if (error) {\r\n        console.error('Database error:', error)\r\n      }\r\n      \r\n      // Add computed status based on transcription_text\r\n      const transcriptionsWithStatus = (data || []).map(t => ({\r\n        ...t,\r\n        status: t.transcription_text && t.transcription_text.trim() !== '' \r\n          ? 'completed' \r\n          : 'pending'\r\n      }))\r\n      \r\n      console.log('Processed transcriptions:', transcriptionsWithStatus)\r\n      setTranscriptions(transcriptionsWithStatus)\r\n    } catch (error) {\r\n      console.error('Error fetching transcriptions:', error)\r\n      setTranscriptions([])\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const applyFilters = () => {\r\n    let filtered = [...transcriptions]\r\n\r\n    // Search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(t => \r\n        t.file_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        t.doctor_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        t.patient_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        t.transcription_text?.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    }\r\n\r\n    // Status filter\r\n    if (statusFilter !== 'all') {\r\n      filtered = filtered.filter(t => t.status === statusFilter)\r\n    }\r\n\r\n    // Date filter\r\n    if (dateFilter !== 'all') {\r\n      const now = new Date()\r\n      const filterDate = new Date()\r\n      \r\n      switch (dateFilter) {\r\n        case 'today':\r\n          filterDate.setHours(0, 0, 0, 0)\r\n          filtered = filtered.filter(t => new Date(t.created_at) >= filterDate)\r\n          break\r\n        case 'week':\r\n          filterDate.setDate(now.getDate() - 7)\r\n          filtered = filtered.filter(t => new Date(t.created_at) >= filterDate)\r\n          break\r\n        case 'month':\r\n          filterDate.setMonth(now.getMonth() - 1)\r\n          filtered = filtered.filter(t => new Date(t.created_at) >= filterDate)\r\n          break\r\n      }\r\n    }\r\n\r\n    // Doctor filter\r\n    if (doctorFilter !== 'all') {\r\n      filtered = filtered.filter(t => t.doctor_name === doctorFilter)\r\n    }\r\n\r\n    // Type filter\r\n    if (typeFilter !== 'all') {\r\n      filtered = filtered.filter(t => t.document_type === typeFilter)\r\n    }\r\n\r\n    setFilteredTranscriptions(filtered)\r\n    setCurrentPage(1)\r\n  }\r\n\r\n  const getUniqueValues = (key: keyof Transcription) => {\r\n    return Array.from(new Set(transcriptions.map(t => t[key]))).filter(Boolean)\r\n  }\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n      case 'in_progress':\r\n        return <Clock className=\"h-4 w-4 text-yellow-500\" />\r\n      case 'failed':\r\n        return <AlertCircle className=\"h-4 w-4 text-red-500\" />\r\n      default:\r\n        return <Clock className=\"h-4 w-4 text-gray-400\" />\r\n    }\r\n  }\r\n\r\n  const exportTranscription = (transcription: Transcription, format: 'txt' | 'json') => {\r\n    const content = format === 'json' \r\n      ? JSON.stringify(transcription, null, 2)\r\n      : `Transcription: ${transcription.file_name}\r\nDoctor: ${transcription.doctor_name}\r\nPatient: ${transcription.patient_name}\r\nType: ${transcription.document_type}\r\nDate: ${new Date(transcription.created_at).toLocaleString()}\r\nStatus: ${transcription.status}\r\n\r\nTranscription Text:\r\n${transcription.transcription_text}`\r\n\r\n    const blob = new Blob([content], { type: format === 'json' ? 'application/json' : 'text/plain' })\r\n    const url = URL.createObjectURL(blob)\r\n    const a = document.createElement('a')\r\n    a.href = url\r\n    a.download = `${transcription.file_name.replace(/\\.[^/.]+$/, '')}.${format}`\r\n    a.click()\r\n    URL.revokeObjectURL(url)\r\n  }\r\n\r\n  const requestReview = async (transcriptionId: string) => {\r\n    try {\r\n      const response = await fetch('/api/reviews', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          transcription_id: transcriptionId,\r\n          notes: 'Please review this transcription for accuracy',\r\n          priority: 0\r\n        })\r\n      })\r\n\r\n      if (response.ok) {\r\n        alert('Review request sent successfully!')\r\n        fetchTranscriptions() // Refresh the list\r\n      } else {\r\n        const error = await response.json()\r\n        alert(`Failed to send review request: ${error.error}`)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error requesting review:', error)\r\n      alert('Failed to send review request')\r\n    }\r\n  }\r\n\r\n  const getReviewBadge = (reviewStatus: string | null | undefined) => {\r\n    if (!reviewStatus) return null\r\n    \r\n    const colors = {\r\n      pending: 'bg-yellow-100 text-yellow-800',\r\n      in_review: 'bg-blue-100 text-blue-800',\r\n      approved: 'bg-green-100 text-green-800',\r\n      rejected: 'bg-red-100 text-red-800',\r\n      completed: 'bg-green-100 text-green-800'\r\n    }\r\n    \r\n    return (\r\n      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${colors[reviewStatus] || 'bg-gray-100 text-gray-800'}`}>\r\n        {reviewStatus.replace('_', ' ')}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  // Pagination\r\n  const totalPages = Math.ceil(filteredTranscriptions.length / itemsPerPage)\r\n  const paginatedTranscriptions = filteredTranscriptions.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  )\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\"></div>\r\n          <p className=\"text-muted-foreground\">Loading transcriptions...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Transcription History</h1>\r\n          <p className=\"text-muted-foreground mt-1\">\r\n            Manage and review all your transcriptions\r\n          </p>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={() => setShowFilters(!showFilters)}\r\n          >\r\n            <Filter className=\"h-4 w-4 mr-2\" />\r\n            Filters\r\n          </Button>\r\n          <Button onClick={fetchTranscriptions}>\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-muted-foreground\">Total</p>\r\n                <p className=\"text-2xl font-bold\">{transcriptions.length}</p>\r\n              </div>\r\n              <FileAudio className=\"h-8 w-8 text-primary opacity-20\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-muted-foreground\">Completed</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">\r\n                  {transcriptions.filter(t => t.status === 'completed').length}\r\n                </p>\r\n              </div>\r\n              <CheckCircle className=\"h-8 w-8 text-green-500 opacity-20\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-muted-foreground\">In Progress</p>\r\n                <p className=\"text-2xl font-bold text-yellow-600\">\r\n                  {transcriptions.filter(t => t.status === 'in_progress').length}\r\n                </p>\r\n              </div>\r\n              <Clock className=\"h-8 w-8 text-yellow-500 opacity-20\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-muted-foreground\">This Week</p>\r\n                <p className=\"text-2xl font-bold\">\r\n                  {transcriptions.filter(t => {\r\n                    const date = new Date(t.created_at)\r\n                    const weekAgo = new Date()\r\n                    weekAgo.setDate(weekAgo.getDate() - 7)\r\n                    return date >= weekAgo\r\n                  }).length}\r\n                </p>\r\n              </div>\r\n              <Calendar className=\"h-8 w-8 text-primary opacity-20\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      {showFilters && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Filters</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n              <div className=\"space-y-2\">\r\n                <Label>Status</Label>\r\n                <select\r\n                  className=\"w-full h-10 px-3 rounded-md border border-input bg-background\"\r\n                  value={statusFilter}\r\n                  onChange={(e) => setStatusFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">All Status</option>\r\n                  <option value=\"completed\">Completed</option>\r\n                  <option value=\"in_progress\">In Progress</option>\r\n                  <option value=\"pending\">Pending</option>\r\n                  <option value=\"failed\">Failed</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label>Date Range</Label>\r\n                <select\r\n                  className=\"w-full h-10 px-3 rounded-md border border-input bg-background\"\r\n                  value={dateFilter}\r\n                  onChange={(e) => setDateFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">All Time</option>\r\n                  <option value=\"today\">Today</option>\r\n                  <option value=\"week\">Last 7 Days</option>\r\n                  <option value=\"month\">Last 30 Days</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label>Doctor</Label>\r\n                <select\r\n                  className=\"w-full h-10 px-3 rounded-md border border-input bg-background\"\r\n                  value={doctorFilter}\r\n                  onChange={(e) => setDoctorFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">All Doctors</option>\r\n                  {getUniqueValues('doctor_name').map(doctor => (\r\n                    <option key={doctor as string} value={doctor as string}>\r\n                      {doctor as string}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <Label>Document Type</Label>\r\n                <select\r\n                  className=\"w-full h-10 px-3 rounded-md border border-input bg-background\"\r\n                  value={typeFilter}\r\n                  onChange={(e) => setTypeFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">All Types</option>\r\n                  {getUniqueValues('document_type').map(type => (\r\n                    <option key={type as string} value={type as string}>\r\n                      {type as string}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Search Bar */}\r\n      <div className=\"relative\">\r\n        <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\r\n        <Input\r\n          placeholder=\"Search by file name, doctor, patient, or content...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"pl-10\"\r\n        />\r\n      </div>\r\n\r\n      {/* Transcriptions Table */}\r\n      <Card>\r\n        <CardContent className=\"p-0\">\r\n          {transcriptions.length === 0 ? (\r\n            <div className=\"p-12 text-center\">\r\n              <FileAudio className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\r\n              <h3 className=\"text-lg font-semibold mb-2\">No Transcriptions Yet</h3>\r\n              <p className=\"text-muted-foreground mb-4\">\r\n                Upload your first audio file to get started with transcriptions.\r\n              </p>\r\n              <Button \r\n                onClick={() => window.location.href = '/dashboard'}\r\n                variant=\"default\"\r\n              >\r\n                Go to Dashboard\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead className=\"border-b bg-muted/50\">\r\n                <tr>\r\n                  <th className=\"text-left p-4\">File</th>\r\n                  <th className=\"text-left p-4\">Doctor</th>\r\n                  <th className=\"text-left p-4\">Patient</th>\r\n                  <th className=\"text-left p-4\">Type</th>\r\n                  <th className=\"text-left p-4\">Date</th>\r\n                  <th className=\"text-left p-4\">Status</th>\r\n                  <th className=\"text-left p-4\">Size</th>\r\n                  <th className=\"text-left p-4\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {paginatedTranscriptions.map((transcription) => (\r\n                  <tr key={transcription.id} className=\"border-b hover:bg-muted/30\">\r\n                    <td className=\"p-4\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <FileAudio className=\"h-4 w-4 text-muted-foreground\" />\r\n                        <span className=\"font-medium\">{transcription.file_name}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"p-4\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <User className=\"h-4 w-4 text-muted-foreground\" />\r\n                        {transcription.doctor_name}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"p-4\">{transcription.patient_name}</td>\r\n                    <td className=\"p-4\">\r\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-primary/10 text-primary\">\r\n                        {transcription.document_type}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"p-4 text-sm\">\r\n                      {new Date(transcription.created_at).toLocaleDateString()}\r\n                    </td>\r\n                    <td className=\"p-4\">\r\n                      <div className=\"flex flex-col gap-1\">\r\n                        <div className=\"flex items-center gap-1\">\r\n                          {getStatusIcon(transcription.status)}\r\n                          <span className=\"text-sm capitalize\">{transcription.status}</span>\r\n                        </div>\r\n                        {transcription.review_status && getReviewBadge(transcription.review_status)}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"p-4 text-sm\">\r\n                      {formatFileSize(transcription.file_size)}\r\n                    </td>\r\n                    <td className=\"p-4\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {transcription.status === 'completed' && !transcription.review_status && (\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"ghost\"\r\n                            onClick={() => requestReview(transcription.id)}\r\n                            title=\"Request Review\"\r\n                          >\r\n                            <Send className=\"h-4 w-4\" />\r\n                          </Button>\r\n                        )}\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => exportTranscription(transcription, 'txt')}\r\n                          disabled={transcription.status !== 'completed'}\r\n                          title=\"Export as Text\"\r\n                        >\r\n                          <FileText className=\"h-4 w-4\" />\r\n                        </Button>\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => exportTranscription(transcription, 'json')}\r\n                          title=\"Export as JSON\"\r\n                        >\r\n                          <Download className=\"h-4 w-4\" />\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          )}\r\n\r\n          {/* Pagination - only show if there are transcriptions */}\r\n          {transcriptions.length > 0 && (\r\n          <div className=\"flex items-center justify-between p-4 border-t\">\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              Showing {((currentPage - 1) * itemsPerPage) + 1} to{' '}\r\n              {Math.min(currentPage * itemsPerPage, filteredTranscriptions.length)} of{' '}\r\n              {filteredTranscriptions.length} results\r\n            </p>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\r\n                disabled={currentPage === 1}\r\n              >\r\n                <ChevronLeft className=\"h-4 w-4\" />\r\n              </Button>\r\n              <span className=\"text-sm\">\r\n                Page {currentPage} of {totalPages}\r\n              </span>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\r\n                disabled={currentPage === totalPages}\r\n              >\r\n                <ChevronRight className=\"h-4 w-4\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}