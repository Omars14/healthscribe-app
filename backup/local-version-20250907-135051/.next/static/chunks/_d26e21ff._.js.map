{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/lib/direct-upload-service.ts"],"sourcesContent":["import { supabase } from './supabase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport interface DirectUploadOptions {\r\n  file: File\r\n  userId?: string\r\n  bucketName?: string\r\n}\r\n\r\nexport interface DirectUploadResult {\r\n  publicUrl: string\r\n  path: string\r\n  error?: string\r\n}\r\n\r\n/**\r\n * Upload file directly to Supabase Storage from the client\r\n * This bypasses Vercel's 4.5MB limit\r\n */\r\nexport async function uploadDirectToStorage({\r\n  file,\r\n  userId,\r\n  bucketName = 'audio-files'\r\n}: DirectUploadOptions): Promise<DirectUploadResult> {\r\n  try {\r\n    // Generate unique file name\r\n    const timestamp = Date.now()\r\n    const fileExt = file.name.split('.').pop() || 'mp3'\r\n    const fileName = `${timestamp}-${uuidv4()}.${fileExt}`\r\n    const filePath = userId ? `${userId}/${fileName}` : `anonymous/${fileName}`\r\n    \r\n    console.log('üì§ Uploading directly to Supabase Storage:', filePath)\r\n    \r\n    // Upload directly to Supabase Storage from client\r\n    const { data, error } = await supabase.storage\r\n      .from(bucketName)\r\n      .upload(filePath, file, {\r\n        cacheControl: '3600',\r\n        upsert: false\r\n      })\r\n    \r\n    if (error) {\r\n      console.error('‚ùå Storage upload error:', error)\r\n      \r\n      // Try to create bucket if it doesn't exist\r\n      if (error.message?.includes('bucket') || error.message?.includes('not found')) {\r\n        console.log('ü™£ Bucket might not exist, please create it in Supabase dashboard')\r\n        throw new Error('Storage bucket not configured. Please contact support.')\r\n      }\r\n      \r\n      throw error\r\n    }\r\n    \r\n    // Get public URL for the uploaded file\r\n    const { data: { publicUrl } } = supabase.storage\r\n      .from(bucketName)\r\n      .getPublicUrl(filePath)\r\n    \r\n    console.log('‚úÖ File uploaded successfully:', publicUrl)\r\n    \r\n    return {\r\n      publicUrl,\r\n      path: filePath\r\n    }\r\n  } catch (error) {\r\n    console.error('‚ùå Failed to upload to storage:', error)\r\n    return {\r\n      publicUrl: '',\r\n      path: '',\r\n      error: error instanceof Error ? error.message : 'Upload failed'\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Create a signed URL for private bucket access\r\n */\r\nexport async function createSignedUrl(\r\n  bucketName: string,\r\n  path: string,\r\n  expiresIn: number = 3600\r\n): Promise<string | null> {\r\n  try {\r\n    const { data, error } = await supabase.storage\r\n      .from(bucketName)\r\n      .createSignedUrl(path, expiresIn)\r\n    \r\n    if (error) throw error\r\n    \r\n    return data.signedUrl\r\n  } catch (error) {\r\n    console.error('Failed to create signed URL:', error)\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Delete a file from storage\r\n */\r\nexport async function deleteFromStorage(\r\n  bucketName: string,\r\n  path: string\r\n): Promise<boolean> {\r\n  try {\r\n    const { error } = await supabase.storage\r\n      .from(bucketName)\r\n      .remove([path])\r\n    \r\n    if (error) throw error\r\n    \r\n    return true\r\n  } catch (error) {\r\n    console.error('Failed to delete from storage:', error)\r\n    return false\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAkBO,eAAe,sBAAsB,KAItB;QAJsB,EAC1C,IAAI,EACJ,MAAM,EACN,aAAa,aAAa,EACN,GAJsB;IAK1C,IAAI;QACF,4BAA4B;QAC5B,MAAM,YAAY,KAAK,GAAG;QAC1B,MAAM,UAAU,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM;QAC9C,MAAM,WAAW,AAAC,GAAe,OAAb,WAAU,KAAe,OAAZ,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD,KAAI,KAAW,OAAR;QAC7C,MAAM,WAAW,SAAS,AAAC,GAAY,OAAV,QAAO,KAAY,OAAT,YAAa,AAAC,aAAqB,OAAT;QAEjE,QAAQ,GAAG,CAAC,8CAA8C;QAE1D,kDAAkD;QAClD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAAC,OAAO,CAC3C,IAAI,CAAC,YACL,MAAM,CAAC,UAAU,MAAM;YACtB,cAAc;YACd,QAAQ;QACV;QAEF,IAAI,OAAO;gBAIL,gBAAqC;YAHzC,QAAQ,KAAK,CAAC,2BAA2B;YAEzC,2CAA2C;YAC3C,IAAI,EAAA,iBAAA,MAAM,OAAO,cAAb,qCAAA,eAAe,QAAQ,CAAC,gBAAa,kBAAA,MAAM,OAAO,cAAb,sCAAA,gBAAe,QAAQ,CAAC,eAAc;gBAC7E,QAAQ,GAAG,CAAC;gBACZ,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM;QACR;QAEA,uCAAuC;QACvC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,GAAG,yHAAA,CAAA,WAAQ,CAAC,OAAO,CAC7C,IAAI,CAAC,YACL,YAAY,CAAC;QAEhB,QAAQ,GAAG,CAAC,iCAAiC;QAE7C,OAAO;YACL;YACA,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;YACL,WAAW;YACX,MAAM;YACN,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF;AAKO,eAAe,gBACpB,UAAkB,EAClB,IAAY;QACZ,YAAA,iEAAoB;IAEpB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAAC,OAAO,CAC3C,IAAI,CAAC,YACL,eAAe,CAAC,MAAM;QAEzB,IAAI,OAAO,MAAM;QAEjB,OAAO,KAAK,SAAS;IACvB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;IACT;AACF;AAKO,eAAe,kBACpB,UAAkB,EAClB,IAAY;IAEZ,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,yHAAA,CAAA,WAAQ,CAAC,OAAO,CACrC,IAAI,CAAC,YACL,MAAM,CAAC;YAAC;SAAK;QAEhB,IAAI,OAAO,MAAM;QAEjB,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/lib/transcription-service.ts"],"sourcesContent":["import { supabase } from './supabase'\nimport { uploadDirectToStorage } from './direct-upload-service'\n\n// Use optimized endpoint by default\nconst USE_OPTIMIZED_API = true\n\nexport interface TranscriptionRequest {\n  audioFile: File\n  doctorName: string\n  patientName: string\n  documentType: string\n}\n\nexport interface TranscriptionResponse {\n  success: boolean\n  transcriptionId?: string\n  status?: string\n  transcription?: string\n  message?: string\n  error?: string\n}\n\nexport interface TranscriptionStatus {\n  id: string\n  status: 'pending' | 'in_progress' | 'completed' | 'failed'\n  transcription_text?: string\n  audio_url?: string\n  error?: string\n}\n\n/**\n * Submit audio file for transcription via n8n webhook\n * Now uploads directly to Supabase Storage to bypass Vercel's 4.5MB limit\n */\nexport async function submitTranscription(\n  request: TranscriptionRequest\n): Promise<TranscriptionResponse> {\n  try {\n    // Get the current session for user ID\n    const { data: { session } } = await supabase.auth.getSession()\n    const userId = session?.user?.id\n    \n    // Step 1: Upload file directly to Supabase Storage from client\n    // This bypasses Vercel's 4.5MB limit entirely\n    console.log('Uploading file directly to Supabase Storage...')\n    const uploadResult = await uploadDirectToStorage({\n      file: request.audioFile,\n      userId\n    })\n    \n    if (uploadResult.error) {\n      throw new Error(uploadResult.error)\n    }\n    \n    // Step 2: Send only metadata and storage URL to our API\n    // This payload is tiny (just a few KB)\n    const payload = {\n      audioUrl: uploadResult.publicUrl,\n      audioPath: uploadResult.path,\n      fileName: request.audioFile.name,\n      fileSize: request.audioFile.size,\n      fileType: request.audioFile.type,\n      doctorName: request.doctorName,\n      patientName: request.patientName,\n      documentType: request.documentType\n    }\n    \n    const endpoint = USE_OPTIMIZED_API ? '/api/transcribe-optimized' : '/api/transcribe'\n    const headers: HeadersInit = {\n      'Content-Type': 'application/json'\n    }\n    \n    if (session?.access_token) {\n      headers['Authorization'] = `Bearer ${session.access_token}`\n    }\n    \n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(payload),\n    })\n\n    const data = await response.json()\n\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to submit transcription')\n    }\n\n    return data\n  } catch (error) {\n    console.error('Transcription submission error:', error)\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Failed to submit transcription',\n      message: 'Please try again or contact support if the issue persists'\n    }\n  }\n}\n\n/**\n * Check the status of a transcription\n */\nexport async function checkTranscriptionStatus(\n  transcriptionId: string\n): Promise<TranscriptionStatus | null> {\n  try {\n    const { data, error } = await supabase\n      .from('transcriptions')\n      .select('id, status, transcription_text, audio_url, error')\n      .eq('id', transcriptionId)\n      .single()\n\n    if (error) {\n      console.error('Status check error:', error)\n      return null\n    }\n\n    return data as TranscriptionStatus\n  } catch (error) {\n    console.error('Failed to check transcription status:', error)\n    return null\n  }\n}\n\n/**\n * Poll for transcription completion\n */\nexport async function pollTranscriptionStatus(\n  transcriptionId: string,\n  onUpdate?: (status: TranscriptionStatus) => void,\n  maxAttempts: number = 60,\n  intervalMs: number = 5000\n): Promise<TranscriptionStatus | null> {\n  let attempts = 0\n\n  return new Promise((resolve) => {\n    const interval = setInterval(async () => {\n      attempts++\n\n      const status = await checkTranscriptionStatus(transcriptionId)\n\n      if (status) {\n        if (onUpdate) {\n          onUpdate(status)\n        }\n\n        if (status.status === 'completed' || status.status === 'failed') {\n          clearInterval(interval)\n          resolve(status)\n          return\n        }\n      }\n\n      if (attempts >= maxAttempts) {\n        clearInterval(interval)\n        resolve(null)\n      }\n    }, intervalMs)\n  })\n}\n\n/**\n * Format file size for display\n */\nexport function formatFileSize(bytes: number | null | undefined): string {\n  if (!bytes || bytes === 0) return '-'\n  \n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  \n  return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i]\n}\n\n/**\n * Validate audio file\n */\nexport function validateAudioFile(file: File): { valid: boolean; error?: string } {\n  const MAX_SIZE = 100 * 1024 * 1024 // 100MB\n  const ALLOWED_TYPES = [\n    'audio/mpeg',\n    'audio/wav',\n    'audio/webm',\n    'audio/ogg',\n    'audio/mp4',\n    'audio/m4a',\n    'audio/x-m4a',\n    'audio/mp3',\n    'audio/x-wav',\n    'audio/wave'\n  ]\n\n  if (file.size > MAX_SIZE) {\n    return {\n      valid: false,\n      error: `File size exceeds maximum of ${formatFileSize(MAX_SIZE)}`\n    }\n  }\n\n  if (!ALLOWED_TYPES.includes(file.type) && !file.name.match(/\\.(mp3|wav|m4a|ogg|webm|mp4)$/i)) {\n    return {\n      valid: false,\n      error: 'Invalid audio format. Please upload MP3, WAV, M4A, OGG, or WebM files'\n    }\n  }\n\n  return { valid: true }\n}\n\n/**\n * Extract audio duration (requires browser audio API)\n */\nexport async function getAudioDuration(file: File): Promise<number> {\n  return new Promise((resolve, reject) => {\n    const audio = new Audio()\n    const objectUrl = URL.createObjectURL(file)\n\n    audio.addEventListener('loadedmetadata', () => {\n      URL.revokeObjectURL(objectUrl)\n      resolve(audio.duration)\n    })\n\n    audio.addEventListener('error', () => {\n      URL.revokeObjectURL(objectUrl)\n      reject(new Error('Failed to load audio file'))\n    })\n\n    audio.src = objectUrl\n  })\n}\n\n/**\n * Format duration for display\n */\nexport function formatDuration(seconds: number): string {\n  const hours = Math.floor(seconds / 3600)\n  const minutes = Math.floor((seconds % 3600) / 60)\n  const secs = Math.floor(seconds % 60)\n\n  if (hours > 0) {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`\n  }\n  return `${minutes}:${secs.toString().padStart(2, '0')}`\n}\n\n/**\n * Subscribe to real-time transcription status updates via SSE\n */\nexport async function subscribeToTranscriptionStatus(\n  transcriptionId: string,\n  onUpdate: (event: TranscriptionStatus) => void,\n  onError?: (error: Error | Event) => void,\n  onComplete?: () => void\n): Promise<() => void> {\n  try {\n    const { data: { session } } = await supabase.auth.getSession()\n\n    if (!session?.access_token) {\n      const error = new Error('No authentication token available')\n      if (onError) onError(error)\n      return () => {} // Return empty cleanup function\n    }\n\n    const token = encodeURIComponent(session.access_token)\n    const eventSource = new EventSource(`/api/transcription-status?id=${transcriptionId}&token=${token}`)\n  \n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data)\n\n        if (data.type === 'status') {\n          onUpdate(data.data)\n        } else if (data.type === 'complete') {\n          if (onComplete) onComplete()\n          eventSource.close()\n        } else if (data.type === 'error' || data.type === 'timeout') {\n          if (onError) onError(data)\n          eventSource.close()\n        }\n      } catch (error) {\n        console.error('SSE parse error:', error)\n        if (onError) onError(error instanceof Error ? error : new Error(String(error)))\n      }\n    }\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error)\n      if (onError) onError(error)\n      eventSource.close()\n    }\n\n    // Return cleanup function\n    return () => {\n      eventSource.close()\n    }\n  } catch (error) {\n    console.error('Failed to create EventSource connection:', error)\n\n    // Fallback to polling if EventSource fails\n    console.log('üîÑ Falling back to polling for transcription status updates')\n    return pollTranscriptionStatus(transcriptionId, onUpdate, 60, 2000) as any\n  }\n}\n\n/**\n * Submit transcription with real-time status updates\n */\nexport async function submitTranscriptionWithUpdates(\n  request: TranscriptionRequest,\n  onStatusUpdate?: (status: TranscriptionStatus) => void\n): Promise<TranscriptionResponse> {\n  try {\n    // Submit the transcription\n    const response = await submitTranscription(request)\n\n    if (response.success && response.transcriptionId) {\n      // Subscribe to status updates\n      const unsubscribe = await subscribeToTranscriptionStatus(\n        response.transcriptionId,\n        (status) => {\n          if (onStatusUpdate) {\n            onStatusUpdate(status)\n          }\n        },\n        (error) => {\n          console.error('Status update error:', error)\n        },\n        () => {\n          console.log('Transcription complete')\n        }\n      )\n\n      // Store unsubscribe function for later cleanup if needed\n      const responseWithUnsubscribe = response as TranscriptionResponse & { unsubscribe?: () => void }\n      responseWithUnsubscribe.unsubscribe = unsubscribe\n    }\n\n    return response\n  } catch (error) {\n    console.error('Submit with updates error:', error)\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Failed to submit transcription',\n      message: 'Please try again'\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/node_modules/uuid/dist/esm-browser/native.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n"],"names":[],"mappings":";;;AAAA,MAAM,aAAa,OAAO,WAAW,eAAe,OAAO,UAAU,IAAI,OAAO,UAAU,CAAC,IAAI,CAAC;uCACjF;IAAE;AAAW","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/node_modules/uuid/dist/esm-browser/rng.js"],"sourcesContent":["let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n"],"names":[],"mappings":";;;AAAA,IAAI;AACJ,MAAM,QAAQ,IAAI,WAAW;AACd,SAAS;IACpB,IAAI,CAAC,iBAAiB;QAClB,IAAI,OAAO,WAAW,eAAe,CAAC,OAAO,eAAe,EAAE;YAC1D,MAAM,IAAI,MAAM;QACpB;QACA,kBAAkB,OAAO,eAAe,CAAC,IAAI,CAAC;IAClD;IACA,OAAO,gBAAgB;AAC3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/node_modules/uuid/dist/esm-browser/regex.js"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n"],"names":[],"mappings":";;;uCAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/node_modules/uuid/dist/esm-browser/validate.js"],"sourcesContent":["import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,SAAS,IAAI;IAClB,OAAO,OAAO,SAAS,YAAY,0JAAA,CAAA,UAAK,CAAC,IAAI,CAAC;AAClD;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/node_modules/uuid/dist/esm-browser/stringify.js"],"sourcesContent":["import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,YAAY,EAAE;AACpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EAAG;IAC1B,UAAU,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC;AAClD;AACO,SAAS,gBAAgB,GAAG;QAAE,SAAA,iEAAS;IAC1C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC9B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAC1B,MACA,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAC3B,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE,WAAW;AAChD;AACA,SAAS,UAAU,GAAG;QAAE,SAAA,iEAAS;IAC7B,MAAM,OAAO,gBAAgB,KAAK;IAClC,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,UAAQ,AAAD,EAAE,OAAO;QACjB,MAAM,UAAU;IACpB;IACA,OAAO;AACX;uCACe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,SAAS,GAAG,OAAO,EAAE,GAAG,EAAE,MAAM;QAKG;IAJ/B,IAAI,2JAAA,CAAA,UAAM,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,SAAS;QACvC,OAAO,2JAAA,CAAA,UAAM,CAAC,UAAU;IAC5B;IACA,UAAU,WAAW,CAAC;QACT,iBAAA;IAAb,MAAM,OAAO,CAAA,OAAA,CAAA,kBAAA,QAAQ,MAAM,cAAd,6BAAA,mBAAkB,eAAA,QAAQ,GAAG,cAAX,mCAAA,kBAAA,sBAAlB,kBAAA,OAAqC,CAAA,GAAA,wJAAA,CAAA,UAAG,AAAD;IACpD,IAAI,KAAK,MAAM,GAAG,IAAI;QAClB,MAAM,IAAI,MAAM;IACpB;IACA,IAAI,CAAC,EAAE,GAAG,AAAC,IAAI,CAAC,EAAE,GAAG,OAAQ;IAC7B,IAAI,CAAC,EAAE,GAAG,AAAC,IAAI,CAAC,EAAE,GAAG,OAAQ;IAC7B,IAAI,KAAK;QACL,SAAS,UAAU;QACnB,IAAI,SAAS,KAAK,SAAS,KAAK,IAAI,MAAM,EAAE;YACxC,MAAM,IAAI,WAAW,AAAC,mBAA4B,OAAV,QAAO,KAAe,OAAZ,SAAS,IAAG;QAClE;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG;YACzB,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,EAAE;QAC7B;QACA,OAAO;IACX;IACA,OAAO,CAAA,GAAA,8JAAA,CAAA,kBAAe,AAAD,EAAE;AAC3B;uCACe","ignoreList":[0],"debugId":null}}]
}