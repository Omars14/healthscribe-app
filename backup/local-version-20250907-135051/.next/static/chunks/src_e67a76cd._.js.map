{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,6JAAA,CAAA,aAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,6JAAA,CAAA,aAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,6JAAA,CAAA,aAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,6JAAA,CAAA,aAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,6JAAA,CAAA,aAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,6JAAA,CAAA,aAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,6JAAA,CAAA,aAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName\r\n\r\nexport { Separator }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,6JAAA,CAAA,aAAgB,MAIhC,QAEE;QADA,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO;yBAGtE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/app/test-deployment/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Badge } from '@/components/ui/badge'\r\nimport { Separator } from '@/components/ui/separator'\r\nimport {\r\n  CheckCircle,\r\n  XCircle,\r\n  AlertTriangle,\r\n  Upload,\r\n  Database,\r\n  Server,\r\n  FileAudio,\r\n  RefreshCw\r\n} from 'lucide-react'\r\n\r\ninterface TestResult {\r\n  name: string\r\n  status: 'pending' | 'running' | 'success' | 'error'\r\n  message?: string\r\n  details?: any\r\n}\r\n\r\nexport default function DeploymentTestPage() {\r\n  const [tests, setTests] = useState<TestResult[]>([\r\n    { name: 'Supabase Connection', status: 'pending' },\r\n    { name: 'Authentication', status: 'pending' },\r\n    { name: 'File Upload', status: 'pending' },\r\n    { name: 'Database Queries', status: 'pending' },\r\n    { name: 'Storage Access', status: 'pending' },\r\n    { name: 'API Endpoints', status: 'pending' },\r\n    { name: 'Transcription Flow', status: 'pending' }\r\n  ])\r\n\r\n  const [isRunning, setIsRunning] = useState(false)\r\n\r\n  const updateTest = (index: number, updates: Partial<TestResult>) => {\r\n    setTests(prev => prev.map((test, i) =>\r\n      i === index ? { ...test, ...updates } : test\r\n    ))\r\n  }\r\n\r\n  const runTest = async (index: number, testFunction: () => Promise<TestResult>) => {\r\n    updateTest(index, { status: 'running' })\r\n\r\n    try {\r\n      const result = await testFunction()\r\n      updateTest(index, {\r\n        status: result.status,\r\n        message: result.message,\r\n        details: result.details\r\n      })\r\n    } catch (error) {\r\n      updateTest(index, {\r\n        status: 'error',\r\n        message: error instanceof Error ? error.message : 'Test failed'\r\n      })\r\n    }\r\n  }\r\n\r\n  const testSupabaseConnection = async (): Promise<TestResult> => {\r\n    try {\r\n      // Test basic Supabase client\r\n      const { supabase } = await import('@/lib/supabase')\r\n      if (!supabase) throw new Error('Supabase client not initialized')\r\n\r\n      // Test connection by checking auth state\r\n      const { data, error } = await supabase.auth.getSession()\r\n\r\n      return {\r\n        name: 'Supabase Connection',\r\n        status: 'success',\r\n        message: 'Supabase client connected successfully',\r\n        details: { hasSession: !!data.session, error: error?.message }\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        name: 'Supabase Connection',\r\n        status: 'error',\r\n        message: error instanceof Error ? error.message : 'Connection failed'\r\n      }\r\n    }\r\n  }\r\n\r\n  const testAuthentication = async (): Promise<TestResult> => {\r\n    try {\r\n      const { supabase } = await import('@/lib/supabase')\r\n      const { data, error } = await supabase.auth.getUser()\r\n\r\n      return {\r\n        name: 'Authentication',\r\n        status: data.user ? 'success' : 'error',\r\n        message: data.user ? `Logged in as ${data.user.email}` : 'Not authenticated',\r\n        details: { userId: data.user?.id, email: data.user?.email }\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        name: 'Authentication',\r\n        status: 'error',\r\n        message: error instanceof Error ? error.message : 'Auth check failed'\r\n      }\r\n    }\r\n  }\r\n\r\n  const testFileUpload = async (): Promise<TestResult> => {\r\n    try {\r\n      // First check if the bucket exists and is accessible\r\n      const { supabaseAdmin } = await import('@/lib/supabase')\r\n\r\n      // Check if supabaseAdmin is properly initialized\r\n      if (!supabaseAdmin) {\r\n        return {\r\n          name: 'File Upload',\r\n          status: 'error',\r\n          message: 'Supabase admin client not initialized',\r\n          details: {\r\n            error: 'supabaseAdmin is null',\r\n            suggestion: 'Check SUPABASE_SERVICE_ROLE_KEY environment variable'\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log('🔍 Testing file upload...')\r\n\r\n      // Add timeout to prevent hanging\r\n      const timeoutPromise = new Promise((_, reject) =>\r\n        setTimeout(() => reject(new Error('Request timeout')), 10000)\r\n      )\r\n\r\n      const storagePromise = supabaseAdmin.storage.listBuckets()\r\n      const { data: buckets, error: listError } = await Promise.race([storagePromise, timeoutPromise]) as any\r\n\r\n      if (listError) {\r\n        return {\r\n          name: 'File Upload',\r\n          status: 'error',\r\n          message: 'Cannot access Supabase Storage - check permissions',\r\n          details: { error: listError.message, suggestion: 'Check your Supabase service role key and storage permissions' }\r\n        }\r\n      }\r\n\r\n      console.log('🔍 Available buckets:', buckets?.map(b => b.name))\r\n      console.log('🔍 Looking for bucket: \"audio-files\"')\r\n\r\n      const audioFilesBucket = buckets?.find(b => b.name === 'audio-files')\r\n      if (!audioFilesBucket) {\r\n        console.log('❌ Bucket \"audio-files\" not found in available buckets')\r\n\r\n        // Check for similar bucket names\r\n        const similarBuckets = buckets?.filter(b =>\r\n          b.name.includes('audio') ||\r\n          b.name.includes('file') ||\r\n          b.name.includes('media')\r\n        ) || []\r\n\r\n        return {\r\n          name: 'File Upload',\r\n          status: 'error',\r\n          message: 'Storage bucket \"audio-files\" not found',\r\n          details: {\r\n            availableBuckets: buckets?.map(b => b.name) || [],\r\n            similarBuckets: similarBuckets.map(b => b.name),\r\n            suggestion: similarBuckets.length > 0\r\n              ? `Found similar buckets: ${similarBuckets.map(b => b.name).join(', ')}. Rename one to \"audio-files\" or create new bucket.`\r\n              : 'Create bucket named \"audio-files\" in Supabase Dashboard > Storage',\r\n            troubleshooting: [\r\n              '1. Go to Supabase Dashboard > Storage',\r\n              '2. Check if bucket exists with different name',\r\n              '3. Make sure you\\'re in the correct Supabase project',\r\n              '4. Try refreshing the Supabase Dashboard',\r\n              '5. Check if you have Storage permissions in your Supabase project'\r\n            ]\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log('✅ Found audio-files bucket:', audioFilesBucket)\r\n\r\n      // Try uploading with different MIME types\r\n      const testFiles = [\r\n        { content: 'test', type: 'text/plain', name: 'test.txt' },\r\n        { content: new Uint8Array([1, 2, 3, 4]), type: 'application/octet-stream', name: 'test.dat' },\r\n        { content: '{\"test\": \"data\"}', type: 'application/json', name: 'test.json' }\r\n      ]\r\n\r\n      let lastError = null\r\n      for (const testFile of testFiles) {\r\n        try {\r\n          const blob = new Blob([testFile.content], { type: testFile.type })\r\n          const file = new File([blob], testFile.name, { type: testFile.type })\r\n\r\n          const { uploadDirectToStorage } = await import('@/lib/direct-upload-service')\r\n          const result = await uploadDirectToStorage({\r\n            file: file,\r\n            bucketName: 'audio-files'\r\n          })\r\n\r\n          if (!result.error) {\r\n            return {\r\n              name: 'File Upload',\r\n              status: 'success',\r\n              message: `File uploaded successfully using ${testFile.type}`,\r\n              details: { publicUrl: result.publicUrl, path: result.path, mimeType: testFile.type }\r\n            }\r\n          }\r\n\r\n          lastError = result.error\r\n        } catch (error) {\r\n          lastError = error instanceof Error ? error.message : String(error)\r\n        }\r\n      }\r\n\r\n      // If all MIME types failed, provide comprehensive guidance\r\n      return {\r\n        name: 'File Upload',\r\n        status: 'error',\r\n        message: 'Storage bucket exists but all upload attempts failed',\r\n        details: {\r\n          error: lastError,\r\n          suggestion: 'Configure bucket to allow these MIME types: text/plain, application/octet-stream, application/json',\r\n          steps: [\r\n            'Go to Supabase Dashboard > Storage > audio-files bucket',\r\n            'Check \"Allowed MIME Types\" settings',\r\n            'Add the MIME types listed above',\r\n            'Or disable MIME type restrictions entirely'\r\n          ]\r\n        }\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        name: 'File Upload',\r\n        status: 'error',\r\n        message: error instanceof Error ? error.message : 'Upload test failed'\r\n      }\r\n    }\r\n  }\r\n\r\n  const testDatabaseQueries = async (): Promise<TestResult> => {\r\n    try {\r\n      const { supabase } = await import('@/lib/supabase')\r\n\r\n      // Test a simple query\r\n      const { data, error } = await supabase\r\n        .from('user_profiles')\r\n        .select('count')\r\n        .limit(1)\r\n\r\n      return {\r\n        name: 'Database Queries',\r\n        status: error ? 'error' : 'success',\r\n        message: error ? error.message : 'Database queries working',\r\n        details: { error: error?.message }\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        name: 'Database Queries',\r\n        status: 'error',\r\n        message: error instanceof Error ? error.message : 'Database test failed'\r\n      }\r\n    }\r\n  }\r\n\r\n  const testStorageAccess = async (): Promise<TestResult> => {\r\n    try {\r\n      const { supabaseAdmin } = await import('@/lib/supabase')\r\n\r\n      // Check if supabaseAdmin is properly initialized\r\n      if (!supabaseAdmin) {\r\n        return {\r\n          name: 'Storage Access',\r\n          status: 'error',\r\n          message: 'Supabase admin client not initialized',\r\n          details: {\r\n            error: 'supabaseAdmin is null',\r\n            suggestion: 'Check SUPABASE_SERVICE_ROLE_KEY environment variable'\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log('🔍 Testing storage access...')\r\n\r\n      // Add timeout to prevent hanging\r\n      const timeoutPromise = new Promise((_, reject) =>\r\n        setTimeout(() => reject(new Error('Request timeout')), 10000)\r\n      )\r\n\r\n      const storagePromise = supabaseAdmin.storage.listBuckets()\r\n      const { data, error } = await Promise.race([storagePromise, timeoutPromise]) as any\r\n\r\n      if (error) {\r\n        if (error.message.includes('permission') || error.message.includes('unauthorized')) {\r\n          return {\r\n            name: 'Storage Access',\r\n            status: 'error',\r\n            message: 'Storage access denied - check RLS policies',\r\n            details: { error: error.message, suggestion: 'Configure storage permissions in Supabase' }\r\n          }\r\n        }\r\n\r\n        return {\r\n          name: 'Storage Access',\r\n          status: 'error',\r\n          message: error.message,\r\n          details: { error: error.message }\r\n        }\r\n      }\r\n\r\n      // Check if audio-files bucket exists\r\n      console.log('🔍 Storage Access Test - Available buckets:', data?.map(b => b.name))\r\n      console.log('🔍 Storage Access Test - Looking for: \"audio-files\"')\r\n\r\n      const audioFilesBucket = data?.find(bucket => bucket.name === 'audio-files')\r\n\r\n      if (!audioFilesBucket) {\r\n        console.log('❌ Storage Access Test - Bucket \"audio-files\" not found')\r\n\r\n        // Check for similar bucket names\r\n        const similarBuckets = data?.filter(b =>\r\n          b.name.includes('audio') ||\r\n          b.name.includes('file') ||\r\n          b.name.includes('media')\r\n        ) || []\r\n\r\n        return {\r\n          name: 'Storage Access',\r\n          status: 'error',\r\n          message: 'Storage accessible but \"audio-files\" bucket missing',\r\n          details: {\r\n            buckets: data?.map(b => b.name),\r\n            similarBuckets: similarBuckets.map(b => b.name),\r\n            suggestion: similarBuckets.length > 0\r\n              ? `Found similar buckets: ${similarBuckets.map(b => b.name).join(', ')}. Rename one to \"audio-files\" or create new bucket.`\r\n              : 'Create \"audio-files\" bucket in Supabase Storage',\r\n            troubleshooting: [\r\n              '1. Check Supabase Dashboard > Storage to see existing buckets',\r\n              '2. Verify you\\'re in the correct Supabase project',\r\n              '3. Make sure bucket name is exactly \"audio-files\"',\r\n              '4. Try refreshing your browser and running test again'\r\n            ]\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log('✅ Storage Access Test - Found audio-files bucket:', audioFilesBucket)\r\n\r\n      return {\r\n        name: 'Storage Access',\r\n        status: 'success',\r\n        message: 'Storage access working with required buckets',\r\n        details: {\r\n          buckets: data?.map(b => b.name),\r\n          audioFilesBucket: audioFilesBucket.name\r\n        }\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        name: 'Storage Access',\r\n        status: 'error',\r\n        message: error instanceof Error ? error.message : 'Storage test failed'\r\n      }\r\n    }\r\n  }\r\n\r\n  const testApiEndpoints = async (): Promise<TestResult> => {\r\n    try {\r\n      // Get authentication token first\r\n      const { supabase } = await import('@/lib/supabase')\r\n      const { data: { session } } = await supabase.auth.getSession()\r\n\r\n      if (!session?.access_token) {\r\n        return {\r\n          name: 'API Endpoints',\r\n          status: 'error',\r\n          message: 'No authentication token available',\r\n          details: { suggestion: 'User must be logged in to test API endpoints' }\r\n        }\r\n      }\r\n\r\n      // Test admin users API with authentication\r\n      const response = await fetch('/api/admin/users?page=1&pageSize=1&includeStats=true', {\r\n        headers: {\r\n          'Authorization': `Bearer ${session.access_token}`\r\n        }\r\n      })\r\n\r\n      let data\r\n      try {\r\n        data = await response.json()\r\n      } catch (e) {\r\n        data = { error: 'Invalid JSON response' }\r\n      }\r\n\r\n      if (response.status === 401) {\r\n        return {\r\n          name: 'API Endpoints',\r\n          status: 'error',\r\n          message: 'Authentication failed - token may be invalid',\r\n          details: { status: response.status, error: data.error, suggestion: 'Check authentication token' }\r\n        }\r\n      }\r\n\r\n      return {\r\n        name: 'API Endpoints',\r\n        status: response.ok ? 'success' : 'error',\r\n        message: response.ok ? 'API endpoints responding correctly' : data.error || 'API test failed',\r\n        details: { status: response.status, hasData: !!data, error: data.error }\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        name: 'API Endpoints',\r\n        status: 'error',\r\n        message: error instanceof Error ? error.message : 'API test failed'\r\n      }\r\n    }\r\n  }\r\n\r\n  const testTranscriptionFlow = async (): Promise<TestResult> => {\r\n    try {\r\n      // Test transcription service import\r\n      const { submitTranscription } = await import('@/lib/transcription-service')\r\n\r\n      return {\r\n        name: 'Transcription Flow',\r\n        status: 'success',\r\n        message: 'Transcription service loaded',\r\n        details: { serviceAvailable: !!submitTranscription }\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        name: 'Transcription Flow',\r\n        status: 'error',\r\n        message: error instanceof Error ? error.message : 'Transcription service failed'\r\n      }\r\n    }\r\n  }\r\n\r\n  const runAllTests = async () => {\r\n    setIsRunning(true)\r\n\r\n    await runTest(0, testSupabaseConnection)\r\n    await runTest(1, testAuthentication)\r\n    await runTest(2, testFileUpload)\r\n    await runTest(3, testDatabaseQueries)\r\n    await runTest(4, testStorageAccess)\r\n    await runTest(5, testApiEndpoints)\r\n    await runTest(6, testTranscriptionFlow)\r\n\r\n    setIsRunning(false)\r\n  }\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'success':\r\n        return <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n      case 'error':\r\n        return <XCircle className=\"h-5 w-5 text-red-500\" />\r\n      case 'running':\r\n        return <RefreshCw className=\"h-5 w-5 text-blue-500 animate-spin\" />\r\n      default:\r\n        return <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />\r\n    }\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'success':\r\n        return 'bg-green-50 border-green-200'\r\n      case 'error':\r\n        return 'bg-red-50 border-red-200'\r\n      case 'running':\r\n        return 'bg-blue-50 border-blue-200'\r\n      default:\r\n        return 'bg-yellow-50 border-yellow-200'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Server className=\"h-6 w-6\" />\r\n            Pre-Deployment Testing Suite\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Test all critical functionality before deploying to Vercel\r\n          </CardDescription>\r\n        </CardHeader>\r\n\r\n        {/* Debug Info */}\r\n        <div className=\"bg-blue-50 dark:bg-blue-950/20 p-4 mx-6 mb-0 rounded-lg border border-blue-200 dark:border-blue-800\">\r\n          <h3 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-2 flex items-center gap-2\">\r\n            🔍 Current Supabase Project\r\n          </h3>\r\n          <div className=\"text-sm text-blue-800 dark:text-blue-200\">\r\n            <div className=\"font-mono bg-blue-100 dark:bg-blue-900/30 p-2 rounded mb-2\">\r\n              https://yaznemrwbingjwqutbvb.supabase.co\r\n            </div>\r\n            <p className=\"mb-2\">\r\n              <strong>⚠️ IMPORTANT:</strong> Make sure you're creating the <code>audio-files</code> bucket in this exact project!\r\n            </p>\r\n            <p className=\"text-xs\">\r\n              If the bucket exists in a different project, that's why the tests are failing.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <CardContent>\r\n          <div className=\"flex gap-4 mb-6\">\r\n            <Button\r\n              onClick={runAllTests}\r\n              disabled={isRunning}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              <RefreshCw className={`h-4 w-4 ${isRunning ? 'animate-spin' : ''}`} />\r\n              Run All Tests\r\n            </Button>\r\n            <Badge variant=\"outline\" className=\"flex items-center gap-2\">\r\n              <Database className=\"h-4 w-4\" />\r\n              Supabase Storage\r\n            </Badge>\r\n            <Badge variant=\"outline\" className=\"flex items-center gap-2\">\r\n              <Upload className=\"h-4 w-4\" />\r\n              Direct Upload\r\n            </Badge>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            {tests.map((test, index) => (\r\n              <Card key={index} className={`transition-all ${getStatusColor(test.status)}`}>\r\n                <CardContent className=\"p-4\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                      {getStatusIcon(test.status)}\r\n                      <div>\r\n                        <h3 className=\"font-medium\">{test.name}</h3>\r\n                        {test.message && (\r\n                          <p className=\"text-sm text-muted-foreground mt-1\">\r\n                            {test.message}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <Badge variant={\r\n                      test.status === 'success' ? 'default' :\r\n                      test.status === 'error' ? 'destructive' :\r\n                      test.status === 'running' ? 'secondary' : 'outline'\r\n                    }>\r\n                      {test.status}\r\n                    </Badge>\r\n                  </div>\r\n                  {test.details && (\r\n                    <div className=\"mt-3 p-3 bg-background/50 rounded text-xs font-mono\">\r\n                      <pre>{JSON.stringify(test.details, null, 2)}</pre>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          <Separator className=\"my-6\" />\r\n\r\n          {/* Deployment Readiness Summary */}\r\n          <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-950/20 dark:to-purple-950/20 p-6 rounded-lg border\">\r\n            <h3 className=\"font-semibold text-lg mb-4 flex items-center gap-2\">\r\n              🚀 Deployment Readiness Summary\r\n            </h3>\r\n\r\n            <div className=\"grid gap-4 md:grid-cols-2\">\r\n              <div>\r\n                <h4 className=\"font-medium mb-2 text-green-700 dark:text-green-300\">✅ Working Components:</h4>\r\n                <ul className=\"text-sm space-y-1\">\r\n                  <li>• Supabase Connection</li>\r\n                  <li>• Authentication System</li>\r\n                  <li>• Database Queries</li>\r\n                  <li>• File Structure</li>\r\n                  <li>• Dependencies</li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div>\r\n                <h4 className=\"font-medium mb-2 text-orange-700 dark:text-orange-300\">⚠️ May Need Attention:</h4>\r\n                <ul className=\"text-sm space-y-1\">\r\n                  <li>• Storage Bucket Config</li>\r\n                  <li>• API Authentication</li>\r\n                  <li>• File Upload Permissions</li>\r\n                  <li>• Environment Variables</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-blue-50 dark:bg-blue-950/20 p-4 rounded-lg\">\r\n            <h3 className=\"font-semibold text-blue-900 dark:text-blue-100 mb-2\">\r\n              📤 File Upload Destination\r\n            </h3>\r\n            <p className=\"text-sm text-blue-800 dark:text-blue-200\">\r\n              Files will be uploaded to <strong>Supabase Storage</strong> (not Vercel).\r\n              This ensures unlimited file sizes and reliable storage.\r\n            </p>\r\n            <div className=\"mt-2 flex gap-2 flex-wrap\">\r\n              <Badge variant=\"outline\">✅ Bypasses Vercel 4.5MB limit</Badge>\r\n              <Badge variant=\"outline\">✅ Reliable storage</Badge>\r\n              <Badge variant=\"outline\">✅ Direct client upload</Badge>\r\n              <Badge variant=\"outline\">✅ Scalable solution</Badge>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Fix Guide */}\r\n          <div className=\"bg-yellow-50 dark:bg-yellow-950/20 p-4 rounded-lg border border-yellow-200 dark:border-yellow-800\">\r\n            <h3 className=\"font-semibold text-yellow-900 dark:text-yellow-100 mb-2\">\r\n              🔧 Fix Storage Issues (Most Common):\r\n            </h3>\r\n            <div className=\"text-sm space-y-3\">\r\n              <div className=\"bg-white dark:bg-gray-800 p-3 rounded border\">\r\n                <strong className=\"text-yellow-800 dark:text-yellow-200\">1. Create Storage Bucket:</strong>\r\n                <ol className=\"text-yellow-700 dark:text-yellow-300 mt-1 ml-4 list-decimal\">\r\n                  <li>Go to <a href=\"https://supabase.com/dashboard\" target=\"_blank\" rel=\"noopener\" className=\"underline\">Supabase Dashboard</a></li>\r\n                  <li>Select your project</li>\r\n                  <li>Go to Storage → Create bucket</li>\r\n                  <li>Name: <code>audio-files</code></li>\r\n                  <li>Keep it private (not public)</li>\r\n                </ol>\r\n              </div>\r\n\r\n              <div className=\"bg-white dark:bg-gray-800 p-3 rounded border\">\r\n                <strong className=\"text-yellow-800 dark:text-yellow-200\">2. Configure MIME Types:</strong>\r\n                <p className=\"text-yellow-700 dark:text-yellow-300 mt-1\">\r\n                  In bucket settings, add these MIME types:\r\n                </p>\r\n                <div className=\"mt-2 font-mono text-xs bg-gray-100 dark:bg-gray-700 p-2 rounded\">\r\n                  audio/*<br/>\r\n                  application/octet-stream<br/>\r\n                  application/json<br/>\r\n                  text/plain\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white dark:bg-gray-800 p-3 rounded border\">\r\n                <strong className=\"text-yellow-800 dark:text-yellow-200\">3. Alternative: Run Setup Script</strong>\r\n                <div className=\"text-yellow-700 dark:text-yellow-300 mt-1\">\r\n                  <p>Run this command in your terminal:</p>\r\n                  <code className=\"block mt-1 p-2 bg-gray-100 dark:bg-gray-700 rounded text-xs\">\r\n                    node setup-supabase-storage.js\r\n                  </code>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Deployment Status */}\r\n          <div className=\"bg-green-50 dark:bg-green-950/20 p-4 rounded-lg border border-green-200 dark:border-green-800\">\r\n            <h3 className=\"font-semibold text-green-900 dark:text-green-100 mb-2\">\r\n              🎯 Deployment Status:\r\n            </h3>\r\n            <div className=\"text-sm text-green-800 dark:text-green-200 space-y-1\">\r\n              <p>✅ <strong>Authentication:</strong> Working perfectly</p>\r\n              <p>✅ <strong>Database:</strong> Connected and responsive</p>\r\n              <p>✅ <strong>API Endpoints:</strong> Functioning correctly</p>\r\n              <p>⚠️ <strong>Storage:</strong> Needs bucket configuration</p>\r\n              <p>✅ <strong>Transcription Service:</strong> Ready</p>\r\n            </div>\r\n            <div className=\"mt-3 p-3 bg-green-100 dark:bg-green-900/30 rounded\">\r\n              <p className=\"text-green-800 dark:text-green-200 text-sm\">\r\n                <strong>Next Step:</strong> Configure storage bucket, then you'll be ready to deploy to Vercel! 🚀\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}