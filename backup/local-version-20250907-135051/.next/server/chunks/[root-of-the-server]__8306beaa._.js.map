{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/app/api/check-profile/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\r\nimport { supabase, getSupabaseAdmin } from '@/lib/supabase'\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    console.log('üîç API: Checking user profile...')\r\n\r\n    const supabase = createClient()\r\n\r\n    // Get current user\r\n    const { data: { user }, error: userError } = await supabase.auth.getUser()\r\n\r\n    if (userError || !user) {\r\n      console.log('‚ùå API: No authenticated user')\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'No authenticated user',\r\n        authenticated: false\r\n      }, { status: 401 })\r\n    }\r\n\r\n    console.log('‚úÖ API: User authenticated:', user.id, user.email)\r\n\r\n    // Check if profile exists\r\n    const { data: profile, error: profileError } = await supabaseAdmin\r\n      .from('user_profiles')\r\n      .select('*')\r\n      .eq('id', user.id)\r\n      .single()\r\n\r\n    if (profile) {\r\n      console.log('‚úÖ API: Profile exists:', profile)\r\n      return NextResponse.json({\r\n        success: true,\r\n        profileExists: true,\r\n        profile: profile\r\n      })\r\n    }\r\n\r\n    if (profileError?.code === 'PGRST116') {\r\n      console.log('‚ö†Ô∏è API: Profile not found, creating one...')\r\n\r\n      // Create profile\r\n      const { data: newProfile, error: createError } = await supabaseAdmin\r\n        .from('user_profiles')\r\n        .insert({\r\n          id: user.id,\r\n          email: user.email!,\r\n          full_name: user.user_metadata?.name || null,\r\n          role: 'transcriptionist'\r\n        })\r\n        .select()\r\n        .single()\r\n\r\n      if (createError) {\r\n        console.log('‚ùå API: Profile creation error:', createError)\r\n        return NextResponse.json({\r\n          success: false,\r\n          error: createError.message,\r\n          profileExists: false\r\n        }, { status: 500 })\r\n      }\r\n\r\n      console.log('‚úÖ API: Profile created successfully:', newProfile)\r\n      return NextResponse.json({\r\n        success: true,\r\n        profileExists: false,\r\n        profile: newProfile,\r\n        created: true\r\n      })\r\n    }\r\n\r\n    console.log('‚ùå API: Profile query error:', profileError)\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: profileError?.message || 'Unknown error',\r\n      profileExists: false\r\n    }, { status: 500 })\r\n\r\n  } catch (error) {\r\n    console.error('‚ùå API: Unexpected error:', error)\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Unexpected error'\r\n    }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAGO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,QAAQ,GAAG,CAAC;QAEZ,MAAM,WAAW;QAEjB,mBAAmB;QACnB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAExE,IAAI,aAAa,CAAC,MAAM;YACtB,QAAQ,GAAG,CAAC;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,OAAO;gBACP,eAAe;YACjB,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,QAAQ,GAAG,CAAC,8BAA8B,KAAK,EAAE,EAAE,KAAK,KAAK;QAE7D,0BAA0B;QAC1B,MAAM,EAAE,MAAM,OAAO,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,cAClD,IAAI,CAAC,iBACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,KAAK,EAAE,EAChB,MAAM;QAET,IAAI,SAAS;YACX,QAAQ,GAAG,CAAC,0BAA0B;YACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,eAAe;gBACf,SAAS;YACX;QACF;QAEA,IAAI,cAAc,SAAS,YAAY;YACrC,QAAQ,GAAG,CAAC;YAEZ,iBAAiB;YACjB,MAAM,EAAE,MAAM,UAAU,EAAE,OAAO,WAAW,EAAE,GAAG,MAAM,cACpD,IAAI,CAAC,iBACL,MAAM,CAAC;gBACN,IAAI,KAAK,EAAE;gBACX,OAAO,KAAK,KAAK;gBACjB,WAAW,KAAK,aAAa,EAAE,QAAQ;gBACvC,MAAM;YACR,GACC,MAAM,GACN,MAAM;YAET,IAAI,aAAa;gBACf,QAAQ,GAAG,CAAC,kCAAkC;gBAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBACvB,SAAS;oBACT,OAAO,YAAY,OAAO;oBAC1B,eAAe;gBACjB,GAAG;oBAAE,QAAQ;gBAAI;YACnB;YAEA,QAAQ,GAAG,CAAC,wCAAwC;YACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,eAAe;gBACf,SAAS;gBACT,SAAS;YACX;QACF;QAEA,QAAQ,GAAG,CAAC,+BAA+B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,cAAc,WAAW;YAChC,eAAe;QACjB,GAAG;YAAE,QAAQ;QAAI;IAEnB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}