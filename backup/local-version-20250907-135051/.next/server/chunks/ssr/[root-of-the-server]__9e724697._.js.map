{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,qMAAA,CAAA,aAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,qMAAA,CAAA,aAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,qMAAA,CAAA,aAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,qMAAA,CAAA,aAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,qMAAA,CAAA,aAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,qMAAA,CAAA,aAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/lib/direct-upload-service.ts"],"sourcesContent":["import { supabase } from './supabase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nexport interface DirectUploadOptions {\r\n  file: File\r\n  userId?: string\r\n  bucketName?: string\r\n}\r\n\r\nexport interface DirectUploadResult {\r\n  publicUrl: string\r\n  path: string\r\n  error?: string\r\n}\r\n\r\n/**\r\n * Upload file directly to Supabase Storage from the client\r\n * This bypasses Vercel's 4.5MB limit\r\n */\r\nexport async function uploadDirectToStorage({\r\n  file,\r\n  userId,\r\n  bucketName = 'audio-files'\r\n}: DirectUploadOptions): Promise<DirectUploadResult> {\r\n  try {\r\n    // Generate unique file name\r\n    const timestamp = Date.now()\r\n    const fileExt = file.name.split('.').pop() || 'mp3'\r\n    const fileName = `${timestamp}-${uuidv4()}.${fileExt}`\r\n    const filePath = userId ? `${userId}/${fileName}` : `anonymous/${fileName}`\r\n    \r\n    console.log('üì§ Uploading directly to Supabase Storage:', filePath)\r\n    \r\n    // Upload directly to Supabase Storage from client\r\n    const { data, error } = await supabase.storage\r\n      .from(bucketName)\r\n      .upload(filePath, file, {\r\n        cacheControl: '3600',\r\n        upsert: false\r\n      })\r\n    \r\n    if (error) {\r\n      console.error('‚ùå Storage upload error:', error)\r\n      \r\n      // Try to create bucket if it doesn't exist\r\n      if (error.message?.includes('bucket') || error.message?.includes('not found')) {\r\n        console.log('ü™£ Bucket might not exist, please create it in Supabase dashboard')\r\n        throw new Error('Storage bucket not configured. Please contact support.')\r\n      }\r\n      \r\n      throw error\r\n    }\r\n    \r\n    // Get public URL for the uploaded file\r\n    const { data: { publicUrl } } = supabase.storage\r\n      .from(bucketName)\r\n      .getPublicUrl(filePath)\r\n    \r\n    console.log('‚úÖ File uploaded successfully:', publicUrl)\r\n    \r\n    return {\r\n      publicUrl,\r\n      path: filePath\r\n    }\r\n  } catch (error) {\r\n    console.error('‚ùå Failed to upload to storage:', error)\r\n    return {\r\n      publicUrl: '',\r\n      path: '',\r\n      error: error instanceof Error ? error.message : 'Upload failed'\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Create a signed URL for private bucket access\r\n */\r\nexport async function createSignedUrl(\r\n  bucketName: string,\r\n  path: string,\r\n  expiresIn: number = 3600\r\n): Promise<string | null> {\r\n  try {\r\n    const { data, error } = await supabase.storage\r\n      .from(bucketName)\r\n      .createSignedUrl(path, expiresIn)\r\n    \r\n    if (error) throw error\r\n    \r\n    return data.signedUrl\r\n  } catch (error) {\r\n    console.error('Failed to create signed URL:', error)\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Delete a file from storage\r\n */\r\nexport async function deleteFromStorage(\r\n  bucketName: string,\r\n  path: string\r\n): Promise<boolean> {\r\n  try {\r\n    const { error } = await supabase.storage\r\n      .from(bucketName)\r\n      .remove([path])\r\n    \r\n    if (error) throw error\r\n    \r\n    return true\r\n  } catch (error) {\r\n    console.error('Failed to delete from storage:', error)\r\n    return false\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAkBO,eAAe,sBAAsB,EAC1C,IAAI,EACJ,MAAM,EACN,aAAa,aAAa,EACN;IACpB,IAAI;QACF,4BAA4B;QAC5B,MAAM,YAAY,KAAK,GAAG;QAC1B,MAAM,UAAU,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM;QAC9C,MAAM,WAAW,GAAG,UAAU,CAAC,EAAE,CAAA,GAAA,0KAAA,CAAA,KAAM,AAAD,IAAI,CAAC,EAAE,SAAS;QACtD,MAAM,WAAW,SAAS,GAAG,OAAO,CAAC,EAAE,UAAU,GAAG,CAAC,UAAU,EAAE,UAAU;QAE3E,QAAQ,GAAG,CAAC,8CAA8C;QAE1D,kDAAkD;QAClD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAAC,OAAO,CAC3C,IAAI,CAAC,YACL,MAAM,CAAC,UAAU,MAAM;YACtB,cAAc;YACd,QAAQ;QACV;QAEF,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,2BAA2B;YAEzC,2CAA2C;YAC3C,IAAI,MAAM,OAAO,EAAE,SAAS,aAAa,MAAM,OAAO,EAAE,SAAS,cAAc;gBAC7E,QAAQ,GAAG,CAAC;gBACZ,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM;QACR;QAEA,uCAAuC;QACvC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,GAAG,sHAAA,CAAA,WAAQ,CAAC,OAAO,CAC7C,IAAI,CAAC,YACL,YAAY,CAAC;QAEhB,QAAQ,GAAG,CAAC,iCAAiC;QAE7C,OAAO;YACL;YACA,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;YACL,WAAW;YACX,MAAM;YACN,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF;AAKO,eAAe,gBACpB,UAAkB,EAClB,IAAY,EACZ,YAAoB,IAAI;IAExB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAAC,OAAO,CAC3C,IAAI,CAAC,YACL,eAAe,CAAC,MAAM;QAEzB,IAAI,OAAO,MAAM;QAEjB,OAAO,KAAK,SAAS;IACvB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;IACT;AACF;AAKO,eAAe,kBACpB,UAAkB,EAClB,IAAY;IAEZ,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAAC,OAAO,CACrC,IAAI,CAAC,YACL,MAAM,CAAC;YAAC;SAAK;QAEhB,IAAI,OAAO,MAAM;QAEjB,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/lib/transcription-service.ts"],"sourcesContent":["import { supabase } from './supabase'\nimport { uploadDirectToStorage } from './direct-upload-service'\n\n// Use optimized endpoint by default\nconst USE_OPTIMIZED_API = true\n\nexport interface TranscriptionRequest {\n  audioFile: File\n  doctorName: string\n  patientName: string\n  documentType: string\n}\n\nexport interface TranscriptionResponse {\n  success: boolean\n  transcriptionId?: string\n  status?: string\n  transcription?: string\n  message?: string\n  error?: string\n}\n\nexport interface TranscriptionStatus {\n  id: string\n  status: 'pending' | 'in_progress' | 'completed' | 'failed'\n  transcription_text?: string\n  audio_url?: string\n  error?: string\n}\n\n/**\n * Submit audio file for transcription via n8n webhook\n * Now uploads directly to Supabase Storage to bypass Vercel's 4.5MB limit\n */\nexport async function submitTranscription(\n  request: TranscriptionRequest\n): Promise<TranscriptionResponse> {\n  try {\n    // Get the current session for user ID\n    const { data: { session } } = await supabase.auth.getSession()\n    const userId = session?.user?.id\n    \n    // Step 1: Upload file directly to Supabase Storage from client\n    // This bypasses Vercel's 4.5MB limit entirely\n    console.log('Uploading file directly to Supabase Storage...')\n    const uploadResult = await uploadDirectToStorage({\n      file: request.audioFile,\n      userId\n    })\n    \n    if (uploadResult.error) {\n      throw new Error(uploadResult.error)\n    }\n    \n    // Step 2: Send only metadata and storage URL to our API\n    // This payload is tiny (just a few KB)\n    const payload = {\n      audioUrl: uploadResult.publicUrl,\n      audioPath: uploadResult.path,\n      fileName: request.audioFile.name,\n      fileSize: request.audioFile.size,\n      fileType: request.audioFile.type,\n      doctorName: request.doctorName,\n      patientName: request.patientName,\n      documentType: request.documentType\n    }\n    \n    const endpoint = USE_OPTIMIZED_API ? '/api/transcribe-optimized' : '/api/transcribe'\n    const headers: HeadersInit = {\n      'Content-Type': 'application/json'\n    }\n    \n    if (session?.access_token) {\n      headers['Authorization'] = `Bearer ${session.access_token}`\n    }\n    \n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(payload),\n    })\n\n    const data = await response.json()\n\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to submit transcription')\n    }\n\n    return data\n  } catch (error) {\n    console.error('Transcription submission error:', error)\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Failed to submit transcription',\n      message: 'Please try again or contact support if the issue persists'\n    }\n  }\n}\n\n/**\n * Check the status of a transcription\n */\nexport async function checkTranscriptionStatus(\n  transcriptionId: string\n): Promise<TranscriptionStatus | null> {\n  try {\n    const { data, error } = await supabase\n      .from('transcriptions')\n      .select('id, status, transcription_text, audio_url, error')\n      .eq('id', transcriptionId)\n      .single()\n\n    if (error) {\n      console.error('Status check error:', error)\n      return null\n    }\n\n    return data as TranscriptionStatus\n  } catch (error) {\n    console.error('Failed to check transcription status:', error)\n    return null\n  }\n}\n\n/**\n * Poll for transcription completion\n */\nexport async function pollTranscriptionStatus(\n  transcriptionId: string,\n  onUpdate?: (status: TranscriptionStatus) => void,\n  maxAttempts: number = 60,\n  intervalMs: number = 5000\n): Promise<TranscriptionStatus | null> {\n  let attempts = 0\n\n  return new Promise((resolve) => {\n    const interval = setInterval(async () => {\n      attempts++\n\n      const status = await checkTranscriptionStatus(transcriptionId)\n\n      if (status) {\n        if (onUpdate) {\n          onUpdate(status)\n        }\n\n        if (status.status === 'completed' || status.status === 'failed') {\n          clearInterval(interval)\n          resolve(status)\n          return\n        }\n      }\n\n      if (attempts >= maxAttempts) {\n        clearInterval(interval)\n        resolve(null)\n      }\n    }, intervalMs)\n  })\n}\n\n/**\n * Format file size for display\n */\nexport function formatFileSize(bytes: number | null | undefined): string {\n  if (!bytes || bytes === 0) return '-'\n  \n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  \n  return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i]\n}\n\n/**\n * Validate audio file\n */\nexport function validateAudioFile(file: File): { valid: boolean; error?: string } {\n  const MAX_SIZE = 100 * 1024 * 1024 // 100MB\n  const ALLOWED_TYPES = [\n    'audio/mpeg',\n    'audio/wav',\n    'audio/webm',\n    'audio/ogg',\n    'audio/mp4',\n    'audio/m4a',\n    'audio/x-m4a',\n    'audio/mp3',\n    'audio/x-wav',\n    'audio/wave'\n  ]\n\n  if (file.size > MAX_SIZE) {\n    return {\n      valid: false,\n      error: `File size exceeds maximum of ${formatFileSize(MAX_SIZE)}`\n    }\n  }\n\n  if (!ALLOWED_TYPES.includes(file.type) && !file.name.match(/\\.(mp3|wav|m4a|ogg|webm|mp4)$/i)) {\n    return {\n      valid: false,\n      error: 'Invalid audio format. Please upload MP3, WAV, M4A, OGG, or WebM files'\n    }\n  }\n\n  return { valid: true }\n}\n\n/**\n * Extract audio duration (requires browser audio API)\n */\nexport async function getAudioDuration(file: File): Promise<number> {\n  return new Promise((resolve, reject) => {\n    const audio = new Audio()\n    const objectUrl = URL.createObjectURL(file)\n\n    audio.addEventListener('loadedmetadata', () => {\n      URL.revokeObjectURL(objectUrl)\n      resolve(audio.duration)\n    })\n\n    audio.addEventListener('error', () => {\n      URL.revokeObjectURL(objectUrl)\n      reject(new Error('Failed to load audio file'))\n    })\n\n    audio.src = objectUrl\n  })\n}\n\n/**\n * Format duration for display\n */\nexport function formatDuration(seconds: number): string {\n  const hours = Math.floor(seconds / 3600)\n  const minutes = Math.floor((seconds % 3600) / 60)\n  const secs = Math.floor(seconds % 60)\n\n  if (hours > 0) {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`\n  }\n  return `${minutes}:${secs.toString().padStart(2, '0')}`\n}\n\n/**\n * Subscribe to real-time transcription status updates via SSE\n */\nexport async function subscribeToTranscriptionStatus(\n  transcriptionId: string,\n  onUpdate: (event: TranscriptionStatus) => void,\n  onError?: (error: Error | Event) => void,\n  onComplete?: () => void\n): Promise<() => void> {\n  try {\n    const { data: { session } } = await supabase.auth.getSession()\n\n    if (!session?.access_token) {\n      const error = new Error('No authentication token available')\n      if (onError) onError(error)\n      return () => {} // Return empty cleanup function\n    }\n\n    const token = encodeURIComponent(session.access_token)\n    const eventSource = new EventSource(`/api/transcription-status?id=${transcriptionId}&token=${token}`)\n  \n    eventSource.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data)\n\n        if (data.type === 'status') {\n          onUpdate(data.data)\n        } else if (data.type === 'complete') {\n          if (onComplete) onComplete()\n          eventSource.close()\n        } else if (data.type === 'error' || data.type === 'timeout') {\n          if (onError) onError(data)\n          eventSource.close()\n        }\n      } catch (error) {\n        console.error('SSE parse error:', error)\n        if (onError) onError(error instanceof Error ? error : new Error(String(error)))\n      }\n    }\n\n    eventSource.onerror = (error) => {\n      console.error('SSE connection error:', error)\n      if (onError) onError(error)\n      eventSource.close()\n    }\n\n    // Return cleanup function\n    return () => {\n      eventSource.close()\n    }\n  } catch (error) {\n    console.error('Failed to create EventSource connection:', error)\n\n    // Fallback to polling if EventSource fails\n    console.log('üîÑ Falling back to polling for transcription status updates')\n    return pollTranscriptionStatus(transcriptionId, onUpdate, 60, 2000) as any\n  }\n}\n\n/**\n * Submit transcription with real-time status updates\n */\nexport async function submitTranscriptionWithUpdates(\n  request: TranscriptionRequest,\n  onStatusUpdate?: (status: TranscriptionStatus) => void\n): Promise<TranscriptionResponse> {\n  try {\n    // Submit the transcription\n    const response = await submitTranscription(request)\n\n    if (response.success && response.transcriptionId) {\n      // Subscribe to status updates\n      const unsubscribe = await subscribeToTranscriptionStatus(\n        response.transcriptionId,\n        (status) => {\n          if (onStatusUpdate) {\n            onStatusUpdate(status)\n          }\n        },\n        (error) => {\n          console.error('Status update error:', error)\n        },\n        () => {\n          console.log('Transcription complete')\n        }\n      )\n\n      // Store unsubscribe function for later cleanup if needed\n      const responseWithUnsubscribe = response as TranscriptionResponse & { unsubscribe?: () => void }\n      responseWithUnsubscribe.unsubscribe = unsubscribe\n    }\n\n    return response\n  } catch (error) {\n    console.error('Submit with updates error:', error)\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Failed to submit transcription',\n      message: 'Please try again'\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Omar/Desktop/AI%20website%20Latest/dashboard-next/src/app/dashboard/analytics/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card'\r\nimport { \r\n  BarChart3, \r\n  TrendingUp, \r\n  Clock, \r\n  FileAudio,\r\n  Users,\r\n  Calendar,\r\n  Activity,\r\n  PieChart,\r\n  ArrowUp,\r\n  ArrowDown,\r\n  Minus\r\n} from 'lucide-react'\r\nimport { supabase } from '@/lib/supabase'\r\nimport { formatFileSize } from '@/lib/transcription-service'\r\n\r\ninterface Analytics {\r\n  totalTranscriptions: number\r\n  completedTranscriptions: number\r\n  averageProcessingTime: number\r\n  totalAudioDuration: number\r\n  totalFileSize: number\r\n  transcriptionsByDay: { date: string; count: number }[]\r\n  transcriptionsByDoctor: { doctor: string; count: number }[]\r\n  transcriptionsByType: { type: string; count: number }[]\r\n  transcriptionsByStatus: { status: string; count: number }[]\r\n  recentActivity: {\r\n    date: string\r\n    count: number\r\n    completed: number\r\n  }[]\r\n}\r\n\r\nexport default function AnalyticsPage() {\r\n  const [analytics, setAnalytics] = useState<Analytics | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [timeRange, setTimeRange] = useState('week')\r\n\r\n  useEffect(() => {\r\n    fetchAnalytics()\r\n  }, [timeRange])\r\n\r\n  const fetchAnalytics = async () => {\r\n    try {\r\n      const { data: transcriptions, error } = await supabase\r\n        .from('transcriptions')\r\n        .select('*')\r\n        .order('created_at', { ascending: false })\r\n\r\n      if (error) throw error\r\n\r\n      if (transcriptions) {\r\n        // Calculate date range\r\n        const now = new Date()\r\n        const startDate = new Date()\r\n        \r\n        switch (timeRange) {\r\n          case 'week':\r\n            startDate.setDate(now.getDate() - 7)\r\n            break\r\n          case 'month':\r\n            startDate.setMonth(now.getMonth() - 1)\r\n            break\r\n          case 'year':\r\n            startDate.setFullYear(now.getFullYear() - 1)\r\n            break\r\n        }\r\n\r\n        const filteredTranscriptions = timeRange === 'all' \r\n          ? transcriptions \r\n          : transcriptions.filter(t => new Date(t.created_at) >= startDate)\r\n\r\n        // Calculate analytics\r\n        const totalTranscriptions = filteredTranscriptions.length\r\n        const completedTranscriptions = filteredTranscriptions.filter(t => t.status === 'completed').length\r\n        const totalFileSize = filteredTranscriptions.reduce((sum, t) => sum + (t.file_size || 0), 0)\r\n        \r\n        // Group by day\r\n        const transcriptionsByDay: { [key: string]: number } = {}\r\n        filteredTranscriptions.forEach(t => {\r\n          const date = new Date(t.created_at).toLocaleDateString()\r\n          transcriptionsByDay[date] = (transcriptionsByDay[date] || 0) + 1\r\n        })\r\n\r\n        // Group by doctor\r\n        const transcriptionsByDoctor: { [key: string]: number } = {}\r\n        filteredTranscriptions.forEach(t => {\r\n          if (t.doctor_name) {\r\n            transcriptionsByDoctor[t.doctor_name] = (transcriptionsByDoctor[t.doctor_name] || 0) + 1\r\n          }\r\n        })\r\n\r\n        // Group by type\r\n        const transcriptionsByType: { [key: string]: number } = {}\r\n        filteredTranscriptions.forEach(t => {\r\n          if (t.document_type) {\r\n            transcriptionsByType[t.document_type] = (transcriptionsByType[t.document_type] || 0) + 1\r\n          }\r\n        })\r\n\r\n        // Group by status\r\n        const transcriptionsByStatus: { [key: string]: number } = {}\r\n        filteredTranscriptions.forEach(t => {\r\n          transcriptionsByStatus[t.status] = (transcriptionsByStatus[t.status] || 0) + 1\r\n        })\r\n\r\n        // Recent activity (last 7 days)\r\n        const recentActivity: Analytics['recentActivity'] = []\r\n        for (let i = 6; i >= 0; i--) {\r\n          const date = new Date()\r\n          date.setDate(date.getDate() - i)\r\n          date.setHours(0, 0, 0, 0)\r\n          \r\n          const nextDate = new Date(date)\r\n          nextDate.setDate(nextDate.getDate() + 1)\r\n          \r\n          const dayTranscriptions = transcriptions.filter(t => {\r\n            const tDate = new Date(t.created_at)\r\n            return tDate >= date && tDate < nextDate\r\n          })\r\n          \r\n          recentActivity.push({\r\n            date: date.toLocaleDateString('en-US', { weekday: 'short' }),\r\n            count: dayTranscriptions.length,\r\n            completed: dayTranscriptions.filter(t => t.status === 'completed').length\r\n          })\r\n        }\r\n\r\n        setAnalytics({\r\n          totalTranscriptions,\r\n          completedTranscriptions,\r\n          averageProcessingTime: 45, // Mock data - would calculate from actual timestamps\r\n          totalAudioDuration: totalTranscriptions * 180, // Mock data - would calculate from actual durations\r\n          totalFileSize,\r\n          transcriptionsByDay: Object.entries(transcriptionsByDay).map(([date, count]) => ({ date, count })),\r\n          transcriptionsByDoctor: Object.entries(transcriptionsByDoctor).map(([doctor, count]) => ({ doctor, count })),\r\n          transcriptionsByType: Object.entries(transcriptionsByType).map(([type, count]) => ({ type, count })),\r\n          transcriptionsByStatus: Object.entries(transcriptionsByStatus).map(([status, count]) => ({ status, count })),\r\n          recentActivity\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching analytics:', error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const getComparisonIcon = (current: number, previous: number) => {\r\n    if (current > previous) return <ArrowUp className=\"h-4 w-4 text-green-500\" />\r\n    if (current < previous) return <ArrowDown className=\"h-4 w-4 text-red-500\" />\r\n    return <Minus className=\"h-4 w-4 text-gray-400\" />\r\n  }\r\n\r\n  const getPercentageChange = (current: number, previous: number) => {\r\n    if (previous === 0) return current > 0 ? 100 : 0\r\n    return Math.round(((current - previous) / previous) * 100)\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4\"></div>\r\n          <p className=\"text-muted-foreground\">Loading analytics...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!analytics) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <p className=\"text-muted-foreground\">No analytics data available</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Analytics Dashboard</h1>\r\n          <p className=\"text-muted-foreground mt-1\">\r\n            Track your transcription metrics and performance\r\n          </p>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <select\r\n            className=\"px-4 py-2 rounded-md border border-input bg-background\"\r\n            value={timeRange}\r\n            onChange={(e) => setTimeRange(e.target.value)}\r\n          >\r\n            <option value=\"week\">Last 7 Days</option>\r\n            <option value=\"month\">Last 30 Days</option>\r\n            <option value=\"year\">Last Year</option>\r\n            <option value=\"all\">All Time</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">\r\n              Total Transcriptions\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-2xl font-bold\">{analytics.totalTranscriptions}</p>\r\n                <p className=\"text-xs text-muted-foreground mt-1\">\r\n                  +12% from last period\r\n                </p>\r\n              </div>\r\n              <FileAudio className=\"h-8 w-8 text-primary opacity-20\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">\r\n              Completion Rate\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-2xl font-bold\">\r\n                  {analytics.totalTranscriptions > 0 \r\n                    ? Math.round((analytics.completedTranscriptions / analytics.totalTranscriptions) * 100)\r\n                    : 0}%\r\n                </p>\r\n                <p className=\"text-xs text-muted-foreground mt-1\">\r\n                  {analytics.completedTranscriptions} completed\r\n                </p>\r\n              </div>\r\n              <Activity className=\"h-8 w-8 text-green-500 opacity-20\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">\r\n              Avg. Processing Time\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-2xl font-bold\">{analytics.averageProcessingTime}s</p>\r\n                <p className=\"text-xs text-muted-foreground mt-1\">\r\n                  -5% faster\r\n                </p>\r\n              </div>\r\n              <Clock className=\"h-8 w-8 text-yellow-500 opacity-20\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">\r\n              Total Storage\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-2xl font-bold\">{formatFileSize(analytics.totalFileSize)}</p>\r\n                <p className=\"text-xs text-muted-foreground mt-1\">\r\n                  Across all files\r\n                </p>\r\n              </div>\r\n              <BarChart3 className=\"h-8 w-8 text-purple-500 opacity-20\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Activity Chart */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Recent Activity</CardTitle>\r\n          <CardDescription>Transcription volume over the last 7 days</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"h-64 flex items-end justify-between gap-2\">\r\n            {analytics.recentActivity.map((day, index) => {\r\n              const maxCount = Math.max(...analytics.recentActivity.map(d => d.count))\r\n              const height = maxCount > 0 ? (day.count / maxCount) * 100 : 0\r\n              const completedHeight = maxCount > 0 ? (day.completed / maxCount) * 100 : 0\r\n              \r\n              return (\r\n                <div key={index} className=\"flex-1 flex flex-col items-center gap-2\">\r\n                  <div className=\"w-full flex flex-col justify-end h-48 relative\">\r\n                    <div \r\n                      className=\"bg-primary/20 rounded-t\"\r\n                      style={{ height: `${height}%` }}\r\n                    >\r\n                      <div \r\n                        className=\"bg-primary rounded-t\"\r\n                        style={{ height: `${(completedHeight / height) * 100}%` }}\r\n                      />\r\n                    </div>\r\n                    {day.count > 0 && (\r\n                      <span className=\"absolute -top-6 left-1/2 -translate-x-1/2 text-xs font-medium\">\r\n                        {day.count}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <span className=\"text-xs text-muted-foreground\">{day.date}</span>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        {/* By Doctor */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>By Doctor</CardTitle>\r\n            <CardDescription>Top transcribing doctors</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {analytics.transcriptionsByDoctor.slice(0, 5).map((item, index) => (\r\n                <div key={index} className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n                    <span className=\"text-sm font-medium\">{item.doctor}</span>\r\n                  </div>\r\n                  <span className=\"text-sm text-muted-foreground\">{item.count}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* By Type */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>By Document Type</CardTitle>\r\n            <CardDescription>Distribution of document types</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {analytics.transcriptionsByType.map((item, index) => {\r\n                const total = analytics.transcriptionsByType.reduce((sum, t) => sum + t.count, 0)\r\n                const percentage = total > 0 ? Math.round((item.count / total) * 100) : 0\r\n                \r\n                return (\r\n                  <div key={index} className=\"space-y-2\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm font-medium capitalize\">{item.type}</span>\r\n                      <span className=\"text-sm text-muted-foreground\">{percentage}%</span>\r\n                    </div>\r\n                    <div className=\"h-2 bg-secondary rounded-full overflow-hidden\">\r\n                      <div \r\n                        className=\"h-full bg-primary\"\r\n                        style={{ width: `${percentage}%` }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* By Status */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>By Status</CardTitle>\r\n            <CardDescription>Current status distribution</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {analytics.transcriptionsByStatus.map((item, index) => {\r\n                const colors: { [key: string]: string } = {\r\n                  completed: 'bg-green-500',\r\n                  in_progress: 'bg-yellow-500',\r\n                  pending: 'bg-gray-400',\r\n                  failed: 'bg-red-500'\r\n                }\r\n                \r\n                return (\r\n                  <div key={index} className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <div className={`h-3 w-3 rounded-full ${colors[item.status] || 'bg-gray-400'}`} />\r\n                      <span className=\"text-sm font-medium capitalize\">{item.status.replace('_', ' ')}</span>\r\n                    </div>\r\n                    <span className=\"text-sm text-muted-foreground\">{item.count}</span>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}