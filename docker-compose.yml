version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: medical-transcription-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.local
    depends_on:
      - n8n
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - medical-transcription

  # n8n Workflow Engine
  n8n:
    image: n8nio/n8n:latest
    container_name: medical-transcription-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_HOST=n8n.your-domain.com
      - N8N_ENCRYPTION_KEY=your-encryption-key-here
      - WEBHOOK_URL=https://n8n.your-domain.com
      - DB_TYPE=sqlite
      - DB_SQLITE_DATABASE=/home/node/.n8n/n8n.db
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/.n8n/workflows
    networks:
      - medical-transcription

  # PostgreSQL Database (optional, if not using Supabase)
  postgres:
    image: postgres:15
    container_name: medical-transcription-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=transcription_db
      - POSTGRES_USER=transcription_user
      - POSTGRES_PASSWORD=secure_password_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - medical-transcription

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: medical-transcription-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - medical-transcription

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: medical-transcription-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
      - n8n
    networks:
      - medical-transcription

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  medical-transcription:
    driver: bridge
