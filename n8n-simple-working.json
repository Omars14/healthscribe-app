{
  "name": "Medical Transcription Simple",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "medical-transcribe-v2",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "webhook-1",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [250, 300],
      "webhookId": "medical-transcribe-v2"
    },
    {
      "parameters": {
        "url": "={{ $input.item.json.audioUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "http-1",
      "name": "Download Audio",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/audio/transcriptions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "whisper-1"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "http-2",
      "name": "Transcribe",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [650, 300]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const webhookData = $('Webhook').item.json;\nconst transcriptionResult = $input.item.json;\n\nreturn {\n  uploadId: webhookData.id,\n  transcription: transcriptionResult.text || '',\n  success: true,\n  fileName: webhookData.fileName || '',\n  doctorName: webhookData.doctorName || '',\n  patientName: webhookData.patientName || '',\n  documentType: webhookData.documentType || '',\n  audioUrl: webhookData.audioUrl || '',\n  callbackUrl: webhookData.callbackUrl || 'http://localhost:3000/api/transcription-result-v2'\n};"
      },
      "id": "code-1",
      "name": "Prepare Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [850, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.callbackUrl }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($json) }}",
        "options": {}
      },
      "id": "http-3",
      "name": "Send to App",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "success"
            },
            {
              "name": "message",
              "value": "Transcription completed"
            }
          ]
        },
        "options": {}
      },
      "id": "set-1",
      "name": "Success Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [1250, 300]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Download Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio": {
      "main": [
        [
          {
            "node": "Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe": {
      "main": [
        [
          {
            "node": "Prepare Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Response": {
      "main": [
        [
          {
            "node": "Send to App",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send to App": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1.0.0",
  "meta": {
    "instanceId": "simple"
  },
  "id": "simple-medical",
  "tags": []
}
